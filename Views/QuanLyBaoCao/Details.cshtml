@model HeThongTimViec.ViewModels.BaoCao.BaoCaoItemViewModel
@using HeThongTimViec.Models
@using HeThongTimViec.Extensions
@using HeThongTimViec.ViewModels.BaoCao

@{
    ViewData["Title"] = "Chi tiết Báo cáo Vi phạm";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap&subset=vietnamese" rel="stylesheet">

}

<style>
    :root {
        --primary-gradient: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(9, 9, 121, 1) 35%, rgba(0, 212, 255, 1) 100%);
        --success-gradient: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        --danger-gradient: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
        --warning-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        --info-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --glass-bg: rgba(255, 255, 255, 0.1);
        --glass-border: rgba(255, 255, 255, 0.2);
        --shadow-light: 0 4px 16px rgba(31, 38, 135, 0.15);
        --shadow-medium: 0 8px 20px rgba(31, 38, 135, 0.2);
        --shadow-heavy: 0 12px 24px rgba(31, 38, 135, 0.3);
    }

    * {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    body {
        background: #ffffff;
        min-height: 100vh;
        font-family: 'Roboto', 'Arial', sans-serif;
    }

    .glass-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 16px;
        box-shadow: var(--shadow-light);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .glass-card:hover {
        transform: translateY(-4px);
        box-shadow: var(--shadow-heavy);
        border-color: rgba(255, 255, 255, 0.4);
    }

    .header-section {
        background: linear-gradient(135deg, #112e58 0%, #366bb8 100%);
        backdrop-filter: blur(15px);
        border-radius: 16px;
        padding: 16px;
        margin-bottom: 24px;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .header-title {
        background: linear-gradient(135deg, #f1f5f9, #ced4da);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-weight: 800;
        font-size: 2rem;
        margin-bottom: 0.3rem;
    }

    .header-subtitle {
        color: #f1f5f9;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .back-btn {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(8px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        border-radius: 8px;
        padding: 0.6rem 1rem;
        color: #e2e8f0;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.85rem;
        transition: all 0.3s ease;
    }

    .back-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
        box-shadow: var(--shadow-light);
        color: #333;
    }

    .gradient-btn {
        border: none;
        border-radius: 8px;
        padding: 0.6rem 1rem;
        font-weight: 600;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.4px;
        position: relative;
        overflow: hidden;
        box-shadow: var(--shadow-light);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .gradient-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        transition: left 0.5s;
    }

    .gradient-btn:hover::before {
        left: 100%;
    }

    .gradient-btn:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-medium);
    }

    .btn-primary.gradient-btn {
        background: var(--primary-gradient);
        color: white;
    }

    .btn-danger.gradient-btn {
        background: var(--danger-gradient);
        color: white;
    }

    .status-badge {
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 0.4px;
        border: none;
        overflow: hidden;
    }

    .status-badge.bg-primary {
        background: var(--primary-gradient);
        box-shadow: 0 2px 8px rgba(103, 126, 234, 0.4);
    }

    .status-badge.bg-info {
        background: var(--info-gradient);
        box-shadow: 0 2px 8px rgba(23, 162, 184, 0.4);
    }

    .status-badge.bg-success {
        background: var(--success-gradient);
        box-shadow: 0 2px 8px rgba(76, 175, 80, 0.4);
    }

    .status-badge.bg-secondary {
        background: var(--warning-gradient);
        box-shadow: 0 2px 8px rgba(108, 117, 125, 0.4);
    }

    .info-row dt {
        font-weight: 700;
        color: #333;
        margin-bottom: 0.3rem;
        font-size: 0.85rem;
    }

    .info-row dd {
        color: #666;
        margin-bottom: 0.8rem;
        padding-left: 0.8rem;
        border-left: 2px solid var(--primary-gradient);
        background: rgba(103, 126, 234, 0.05);
        padding: 0.4rem 0.8rem;
        border-radius: 6px;
        font-size: 0.85rem;
    }

    .modal-content {
        border-radius: 16px;
        border: none;
        box-shadow: var(--shadow-heavy);
        backdrop-filter: blur(15px);
    }

    .modal-header {
        background: var(--primary-gradient);
        color: white;
        border-radius: 16px 16px 0 0;
        border: none;
        padding: 0.8rem 1rem;
    }

    .form-control, .form-select {
        border: 1px solid rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        padding: 6px 10px;
        font-size: 0.85rem;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.8);
    }

    .form-control:focus, .form-select:focus {
        border-color: #00D4FF;
        box-shadow: 0 0 0 0.15rem rgba(0, 212, 255, 0.2);
        background: white;
    }

    .alert {
        border: none;
        border-radius: 10px;
        padding: 12px;
        margin-bottom: 0.8rem;
        backdrop-filter: blur(8px);
        font-size: 0.85rem;
        animation: slideInDown 0.3s ease;
    }

    .alert-success {
        background: linear-gradient(135deg, rgba(40, 167, 69, 0.15) 0%, rgba(40, 167, 69, 0.1) 100%);
        border-left: 3px solid #28a745;
        color: #155724;
    }

    .alert-danger {
        background: linear-gradient(135deg, rgba(220, 53, 69, 0.15) 0%, rgba(220, 53, 69, 0.1) 100%);
        border-left: 3px solid #dc3545;
        color: #721c24;
    }

    .section-divider {
        height: 1px;
        background: linear-gradient(90deg, transparent, rgba(103, 126, 234, 0.3), transparent);
        margin: 1.5rem 0;
    }

    .floating-action {
        position: fixed;
        bottom: 1.5rem;
        right: 1.5rem;
        z-index: 1000;
    }

    .floating-btn {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: var(--primary-gradient);
        border: none;
        color: white;
        font-size: 1.2rem;
        box-shadow: var(--shadow-medium);
        transition: all 0.3s ease;
    }

    .floating-btn:hover {
        transform: scale(1.1) rotate(360deg);
        box-shadow: var(--shadow-heavy);
    }

    @@keyframes slideInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
        .header-title {
            font-size: 1.5rem;
        }

        .header-subtitle {
            font-size: 0.8rem;
        }

        .glass-card {
            margin-bottom: 0.8rem;
        }

        .floating-action {
            bottom: 1rem;
            right: 1rem;
        }

        .floating-btn {
            width: 40px;
            height: 40px;
            font-size: 1rem;
        }

        .modal-header {
            padding: 0.6rem 0.8rem;
        }

        .modal-title {
            font-size: 1rem;
        }
    }

    .ripple {
        position: absolute;
        border-radius: 50%;
        transform: scale(0);
        animation: rippleEffect 0.6s linear;
        background-color: rgba(255, 255, 255, 0.6);
    }

    @@keyframes rippleEffect {
        to {
            transform: scale(4);
            opacity: 0;
        }
    }
</style>

<div class="container-fluid">
    <!-- HEADER SECTION -->
    <div class="header-section">
        <div class="d-flex justify-content-between align-items-center flex-wrap">
            <div>
                <h1 class="header-title">Chi tiết Báo cáo #@Model.BaoCaoId</h1>
                <p class="header-subtitle mb-0">Xem thông tin chi tiết và xử lý báo cáo vi phạm tin tuyển dụng.</p>
            </div>
            <a asp-controller="QuanLyBaoCao" asp-action="Index" class="back-btn">
                <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách
            </a>
        </div>
    </div>

    <!-- THÔNG BÁO -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row g-4">
        <!-- CỘT THÔNG TIN BÁO CÁO -->
        <div class="col-lg-5">
            <div class="glass-card">
                <div class="card-body p-4">
                    <h4 class="mb-4 d-flex align-items-center">
                        <i class="fas fa-flag me-3 text-primary"></i>
                        Thông tin Báo cáo
                    </h4>
                    <dl class="info-row row">
                        <dt class="col-sm-4">ID Báo cáo:</dt>
                        <dd class="col-sm-8">#@Model.BaoCaoId</dd>

                        <dt class="col-sm-4">Người báo cáo:</dt>
                        <dd class="col-sm-8">
                            <a asp-controller="NguoiDung" asp-action="CaNhan" asp-route-id="@Model.NguoiBaoCaoId" target="_blank" class="text-decoration-none">
                                @Model.TenNguoiBaoCao
                            </a>
                        </dd>

                        <dt class="col-sm-4">Ngày báo cáo:</dt>
                        <dd class="col-sm-8">@Model.NgayBaoCao.ToString("dd/MM/yyyy HH:mm")</dd>

                        <dt class="col-sm-4">Lý do:</dt>
                        <dd class="col-sm-8"><span class="fw-bold text-danger">@Model.LyDoBaoCaoDisplay</span></dd>

                        <dt class="col-sm-12 mt-2">Chi tiết từ người báo cáo:</dt>
                        <dd class="col-sm-12">
                            <div class="p-2 bg-light border rounded">
                                @(string.IsNullOrWhiteSpace(Model.ChiTietBaoCao) ? "Không có chi tiết." : Model.ChiTietBaoCao)
                            </div>
                        </dd>
                    </dl>

                    <div class="section-divider"></div>

                    <h4 class="mb-4 d-flex align-items-center">
                        <i class="fas fa-gavel me-3 text-warning"></i>
                        Xử lý Báo cáo
                    </h4>
                    <dl class="info-row row">
                        <dt class="col-sm-4">Trạng thái:</dt>
                        <dd class="col-sm-8">
                            <span class="status-badge
                                @((Model.TrangThaiXuLy == TrangThaiXuLyBaoCao.moi) ? "bg-primary" : 
                                   (Model.TrangThaiXuLy == TrangThaiXuLyBaoCao.daxemxet) ? "bg-info" : 
                                   (Model.TrangThaiXuLy == TrangThaiXuLyBaoCao.daxuly) ? "bg-success" : 
                                   "bg-secondary")">
                                @Model.TrangThaiXuLyDisplay
                            </span>
                        </dd>

                        @if (Model.TrangThaiXuLy != TrangThaiXuLyBaoCao.moi)
                        {
                            <dt class="col-sm-4">Admin xử lý:</dt>
                            <dd class="col-sm-8">@Model.TenAdminXuLy</dd>

                            @if (Model.NgayXuLyCuaAdmin.HasValue)
                            {
                                <dt class="col-sm-4">Ngày xử lý:</dt>
                                <dd class="col-sm-8">@Model.NgayXuLyCuaAdmin.Value.ToString("dd/MM/yyyy HH:mm")</dd>
                            }

                            <dt class="col-sm-12 mt-2">Ghi chú của Admin:</dt>
                            <dd class="col-sm-12">
                                <div class="p-2 bg-light border rounded">
                                    @(string.IsNullOrWhiteSpace(Model.GhiChuAdmin) ? "Không có ghi chú." : Model.GhiChuAdmin)
                                </div>
                            </dd>
                        }
                    </dl>

                    @if (Model.TrangThaiXuLy == TrangThaiXuLyBaoCao.daxemxet)
                    {
                        <div class="d-grid gap-2 mt-4">
                            <button type="button" class="btn gradient-btn btn-primary" data-bs-toggle="modal" data-bs-target="#processReportModal">
                                <i class="fas fa-gavel me-2"></i>Thực hiện xử lý
                            </button>
                        </div>
                    }

                    @if (Model.CanDelete)
                    {
                        <div class="d-grid gap-2 mt-2">
                            <button type="button" class="btn gradient-btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteReportModal">
                                <i class="fas fa-trash me-2"></i>Xóa báo cáo
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- CỘT THÔNG TIN TIN TUYỂN DỤNG -->
        <div class="col-lg-7">
            <div class="glass-card">
                <div class="card-header p-4 d-flex justify-content-between align-items-center">
                    <h4 class="mb-0 d-flex align-items-center">
                        <i class="fas fa-briefcase me-3 text-dark"></i>
                        Tin tuyển dụng bị báo cáo
                    </h4>
                    <div class="d-flex gap-2">
                        <a asp-controller="TimViec" asp-action="ChiTiet" asp-route-id="@Model.TinTuyenDungId" target="_blank" class="btn gradient-btn btn-primary" title="Xem trang hiển thị công khai">
                            <i class="fas fa-globe me-1"></i>Xem công khai
                        </a>
                        <a asp-controller="QuanLyTinDang" asp-action="ChiTiet" asp-route-id="@Model.TinTuyenDungId" target="_blank" class="btn gradient-btn btn-primary" title="Trang quản lý tin đăng của Admin">
                            <i class="fas fa-user-shield me-1"></i>Quản lý
                        </a>
                    </div>
                </div>
                <div class="card-body p-5">
                    <h3 class="fw-bold mb-3">@Model.TieuDeTinTuyenDung</h3>
                    <dl class="info-row row">
                        <dt class="col-sm-4">Nhà tuyển dụng:</dt>
                        <dd class="col-sm-8">
                            @if (Model.LoaiTkNguoiDang == LoaiTaiKhoan.doanhnghiep)
                            {
                                <a asp-controller="NguoiDung" asp-action="DoanhNghiep" asp-route-id="@Model.NguoiDangId" target="_blank" class="text-decoration-none">
                                    @Model.TenNhaTuyenDungHoacNguoiDang
                                </a>
                            }
                            else
                            {
                                <a asp-controller="NguoiDung" asp-action="CaNhan" asp-route-id="@Model.NguoiDangId" target="_blank" class="text-decoration-none">
                                    @Model.TenNhaTuyenDungHoacNguoiDang
                                </a>
                            }
                        </dd>

                        <dt class="col-sm-4">Địa điểm:</dt>
                        <dd class="col-sm-8">@Model.DiaDiemTinTuyenDung</dd>

                        <dt class="col-sm-4">Mức lương:</dt>
                        <dd class="col-sm-8">@Model.MucLuongDisplayTinTuyenDung</dd>

                        <dt class="col-sm-4">Loại hình:</dt>
                        <dd class="col-sm-8">@Model.LoaiHinhDisplayTinTuyenDung</dd>
                    </dl>

                    <div class="section-divider"></div>

                    <h4 class="mb-3">Mô tả công việc</h4>
                    <div class="p-3 mb-4">@Html.Raw(Model.MoTaTinTuyenDung ?? "N/A")</div>

                    <div class="section-divider"></div>

                    <h4 class="mb-3">Yêu cầu</h4>
                    <div class="p-3">@Html.Raw(Model.YeuCauTinTuyenDung ?? "N/A")</div>
                </div>
            </div>
        </div>
    </div>

    <!-- FLOATING ACTION BUTTON -->
    <div class="floating-action">
        <button class="floating-btn" onclick="window.scrollTo({top: 0, behavior: 'smooth'})" title="Lên đầu trang">
            <i class="fas fa-arrow-up"></i>
        </button>
    </div>
</div>

<!-- PROCESS REPORT MODAL -->
<div class="modal fade" id="processReportModal" tabindex="-1" aria-labelledby="processReportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-action="ProcessReport" method="post" id="processReportForm">
                @Html.AntiForgeryToken()
                <input type="hidden" name="BaoCaoId" value="@Model.BaoCaoId" />
                <div class="modal-header">
                    <h5 class="modal-title" id="processReportModalLabel">
                        <i class="fas fa-gavel me-2"></i>Xử lý báo cáo #@Model.BaoCaoId
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="mb-3">
                        <label asp-for="@(new ProcessReportViewModel().Action)" class="form-label fw-bold"></label>
                        <select name="Action" id="actionSelect" class="form-select" asp-items="Html.GetEnumSelectList<ReportActionType>()">
                            <option value="">Chọn hành động</option>
                        </select>
                    </div>

                    <div id="warningMessageContainer" class="mb-3" style="display: none;">
                        <label asp-for="@(new ProcessReportViewModel().NoiDungCanhCao)" class="form-label fw-bold"></label>
                        <textarea name="NoiDungCanhCao" class="form-control" rows="3" placeholder="Ví dụ: Tài khoản của bạn đã đăng một tin vi phạm quy định. Tin đã bị xoá. Vui lòng không tái phạm."></textarea>
                        <div class="form-text">Nội dung này sẽ được gửi đến người đăng tin vi phạm. Để trống sẽ dùng nội dung mặc định.</div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="@(new ProcessReportViewModel().GhiChuAdmin)" class="form-label fw-bold"></label>
                        <textarea name="GhiChuAdmin" class="form-control" rows="4" required placeholder="Ghi chú này sẽ được gửi tới người báo cáo và được lưu lại trong hệ thống."></textarea>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn gradient-btn btn-primary">
                        <i class="fas fa-check-circle me-2"></i>Xác nhận xử lý
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- DELETE REPORT MODAL -->
@if (Model.CanDelete)
{
    <div class="modal fade" id="deleteReportModal" tabindex="-1" aria-labelledby="deleteReportModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <form asp-action="Delete" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.BaoCaoId" />
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteReportModalLabel">
                            <i class="fas fa-trash me-2"></i>Xác nhận xóa báo cáo
                        </h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body p-4">
                        <div class="text-center mb-4">
                            <i class="fas fa-trash text-danger" style="font-size: 3rem;"></i>
                        </div>
                        <p class="text-center mb-3">Bạn có chắc chắn muốn xóa vĩnh viễn báo cáo này không?</p>
                        <div class="alert alert-warning d-flex align-items-center" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <div>
                                <strong>Cảnh báo:</strong> Hành động này không thể được hoàn tác.
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer border-0 justify-content-center">
                        <button type="button" class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">
                            <i class="fas fa-times me-2"></i>Hủy bỏ
                        </button>
                        <button type="submit" class="btn gradient-btn btn-danger px-4">
                            <i class="fas fa-trash me-2"></i>Xóa
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Toggle warning message in process report modal
            const actionSelect = document.getElementById('actionSelect');
            const warningContainer = document.getElementById('warningMessageContainer');

            function toggleWarningMessage() {
                if (!actionSelect || !warningContainer) return;

                const selectedAction = actionSelect.value;
                if (selectedAction === '@ReportActionType.WarnAndHide' || selectedAction === '@ReportActionType.SuspendAndHide') {
                    warningContainer.style.display = 'block';
                } else {
                    warningContainer.style.display = 'none';
                }
            }

            toggleWarningMessage();
            if (actionSelect) {
                actionSelect.addEventListener('change', toggleWarningMessage);
            }

            // Smooth scrolling for internal links
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });
                    }
                });
            });

            // Add loading states to buttons
            document.querySelectorAll('form').forEach(form => {
                form.addEventListener('submit', function(e) {
                    const submitBtn = form.querySelector('button[type="submit"]');
                    if (submitBtn) {
                        submitBtn.disabled = true;
                        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang xử lý...';
                    }
                });
            });

            // Animate cards on scroll
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, observerOptions);

            document.querySelectorAll('.glass-card').forEach(card => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';
                card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
                observer.observe(card);
            });

            // Add ripple effect to buttons
            document.querySelectorAll('.gradient-btn').forEach(btn => {
                btn.addEventListener('click', function(e) {
                    let ripple = document.createElement('span');
                    ripple.classList.add('ripple');
                    this.appendChild(ripple);

                    let x = e.clientX - e.target.offsetLeft;
                    let y = e.clientY - e.target.offsetTop;

                    ripple.style.left = x + 'px';
                    ripple.style.top = y + 'px';

                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });

            // Auto-hide alerts
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    alert.classList.add('fade');
                    setTimeout(() => {
                        alert.remove();
                    }, 300);
                }, 5000);
            });
        });
    </script>

    <style>
        .ripple {
            position: absolute;
            border-radius: 50%;
            transform: scale(0);
            animation: rippleEffect 0.6s linear;
            background-color: rgba(255, 255, 255, 0.6);
        }

        @@keyframes rippleEffect {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }
    </style>
}