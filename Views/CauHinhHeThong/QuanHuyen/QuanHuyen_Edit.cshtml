@model HeThongTimViec.Models.QuanHuyen
@{
    ViewData["Title"] = "Chỉnh Sửa Quận/Huyện";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var thanhPhoList = ViewData["ThanhPhoId"] as SelectList;
}

<style>
    :root {
        --primary-gradient: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(9, 9, 121, 1) 35%, rgba(0, 212, 255, 1) 100%);
        --success-gradient: linear-gradient(135deg, #0f897f 0%, #7dcb9a 100%);
        --danger-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        --dark-gradient: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
        --glass-bg: rgba(255, 255, 255, 0.1);
        --glass-border: rgba(255, 255, 255, 0.2);
    }

    .page-header {
        background: linear-gradient(135deg, #112e58 0%, #366bb8 100%);
        color: white;
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 15px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 212, 255, 0.3);
    }

    .page-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }

    .page-header h1 {
        position: relative;
        z-index: 2;
        margin: 0;
        font-weight: 300;
        font-size: 2.5rem;
    }

    .page-header h4 {
        position: relative;
        z-index: 2;
        margin: 0.5rem 0 0;
        font-weight: 400;
        color: rgba(255, 255, 255, 0.9);
    }

    .form-card {
        background: white;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: none;
        padding: 20px;
    }

    .alert {
        border: none;
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 20px;
        backdrop-filter: blur(10px);
        animation: slideInDown 0.5s ease;
    }

    .alert-danger {
        background: linear-gradient(135deg, rgba(220, 53, 69, 0.15) 0%, rgba(220, 53, 69, 0.1) 100%);
        border-left: 4px solid #dc3545;
        color: #721c24;
    }

    .btn-primary {
        background: var(--dark-gradient);
        border: none;
        border-radius: 12px;
        padding: 12px 24px;
        transition: all 0.3s ease;
        font-weight: 500;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 16px rgba(0, 212, 255, 0.3);
        filter: brightness(1.1);
    }

    .btn-outline-secondary {
        border: 2px solid #6c757d;
        border-radius: 12px;
        padding: 12px 16px;
        transition: all 0.3s ease;
    }

    .btn-outline-secondary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
    }

    .form-control, .form-select {
        border: 2px solid rgba(0, 0, 0, 0.1);
        border-radius: 12px;
        padding: 12px 16px;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.9);
    }

    .form-control:focus, .form-select:focus {
        border-color: #00D4FF;
        box-shadow: 0 0 0 0.2rem rgba(0, 212, 255, 0.25);
        background: white;
    }

    .form-label {
        font-weight: 500;
        color: #2c3e50;
    }

    .text-danger {
        font-size: 0.875rem;
        margin-top: 5px;
    }

    .floating-action {
        position: fixed;
        bottom: 30px;
        right: 30px;
        z-index: 1000;
    }

    .fab {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: var(--success-gradient);
        border: none;
        color: white;
        font-size: 24px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease;
        text-decoration: none;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .fab:hover {
        transform: scale(1.1) rotate(90deg);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        color: white;
    }

    @@keyframes slideInDown {
        from {
            opacity: 0;
            transform: translateY(-30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-in {
        animation: fadeInUp 0.6s ease-out;
    }

    @@media (max-width: 768px) {
        .page-header h1 {
            font-size: 2rem;
        }

        .page-header h4 {
            font-size: 1.25rem;
        }

        .floating-action {
            bottom: 20px;
            right: 20px;
        }

        .fab {
            width: 50px;
            height: 50px;
            font-size: 20px;
        }
    }
</style>

<!-- === TIÊU ĐỀ === -->
<div class="page-header animate-fade-in">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1><i class="fas fa-map me-3"></i>@ViewData["Title"]</h1>
            <h4>Quận/Huyện: "@Model.Ten" (Thuộc @Model.ThanhPho?.Ten)</h4>
        </div>
        <a asp-action="QuanHuyen_Index" asp-route-thanhPhoIdFilter="@Model.ThanhPhoId" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-2"></i>Quay lại
        </a>
    </div>
</div>

<!-- === FORM CHỈNH SỬA === -->
<div class="form-card shadow mb-4 animate-fade-in">
    <div class="card-body">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="QuanHuyen_Edit" asp-route-id="@Model.Id" method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Id" />
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <div class="mb-3">
                <label asp-for="ThanhPhoId" class="form-label"></label>
                <select asp-for="ThanhPhoId" class="form-select" asp-items="thanhPhoList">
                    <option value="">-- Chọn Tỉnh/Thành Phố --</option>
                </select>
                <span asp-validation-for="ThanhPhoId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Ten" class="form-label"></label>
                <input asp-for="Ten" class="form-control" placeholder="Nhập tên quận/huyện..." />
                <span asp-validation-for="Ten" class="text-danger"></span>
            </div>

            <div class="d-flex gap-2 mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save me-2"></i>Lưu thay đổi
                </button>
                <a asp-action="QuanHuyen_Index" asp-route-thanhPhoIdFilter="@Model.ThanhPhoId" class="btn btn-outline-secondary">
                    <i class="fas fa-times me-2"></i>Hủy
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Floating Action Button -->
<div class="floating-action">
    <a asp-action="QuanHuyen_Create" asp-route-thanhPhoId="@Model.ThanhPhoId" class="fab" title="Tạo Quận/Huyện mới">
        <i class="fas fa-plus"></i>
    </a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Animation cho form card
            const formCard = document.querySelector('.form-card');
            formCard.classList.add('animate-fade-in');

            // Button hover effects
            document.querySelectorAll('.btn').forEach(btn => {
                btn.addEventListener('mouseenter', function () {
                    if (!this.classList.contains('disabled')) {
                        this.style.transform = 'translateY(-2px)';
                    }
                });

                btn.addEventListener('mouseleave', function () {
                    this.style.transform = 'translateY(0)';
                });
            });

            // Enhanced form interactions
            document.querySelectorAll('.form-control, .form-select').forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentNode.style.transform = 'scale(1.02)';
                    this.parentNode.style.transition = 'transform 0.2s ease';
                });

                input.addEventListener('blur', function() {
                    this.parentNode.style.transform = 'scale(1)';
                });
            });

            // Auto-hide alerts
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    if (alert.style.display !== 'none') {
                        alert.style.opacity = '0';
                        alert.style.transform = 'translateY(-20px)';
                        setTimeout(() => {
                            alert.style.display = 'none';
                        }, 300);
                    }
                }, 5000);
            });
        });
    </script>
}