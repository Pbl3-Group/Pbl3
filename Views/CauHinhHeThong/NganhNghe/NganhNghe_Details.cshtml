@model HeThongTimViec.Models.NganhNghe
@{
    ViewData["Title"] = "Chi Tiết Ngành Nghề";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    :root {
        --primary-gradient: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(9, 9, 121, 1) 35%, rgba(0, 212, 255, 1) 100%);
        --success-gradient: linear-gradient(135deg, #0f897f 0%, #7dcb9a 100%);
        --danger-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        --warning-gradient: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
        --dark-gradient: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
        --glass-bg: rgba(255, 255, 255, 0.1);
        --glass-border: rgba(255, 255, 255, 0.2);
    }

    .page-header {
        background: linear-gradient(135deg, #112e58 0%, #366bb8 100%);
        color: white;
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 25px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 212, 255, 0.3);
    }

    .page-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }

    .page-header h1 {
        position: relative;
        z-index: 1;
        margin: 0;
        font-weight: 300;
        font-size: 2.5rem;
    }

    .details-card {
        background: white;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: none;
        transition: all 0.4s ease;
    }

    .details-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .info-section {
        background: linear-gradient(135deg, #f9fafb 0%, #f1f5f9 100%);
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 20px;
    }

    .info-section h6 {
        color: #2d3748;
        font-weight: 600;
        margin-bottom: 15px;
    }

    .info-item {
        display: flex;
        align-items: flex-start;
        margin-bottom: 15px;
    }

    .info-label {
        color: #6c757d;
        font-weight: 500;
        width: 150px;
        flex-shrink: 0;
    }

    .info-value {
        color: #4a5568;
        flex-grow: 1;
    }

    .info-value .description-box {
        background: white;
        border-radius: 10px;
        padding: 15px;
        border: 1px solid rgba(0, 0, 0, 0.05);
    }

    .btn-primary {
        background: var(--dark-gradient);
        border: none;
        border-radius: 12px;
        padding: 12px 24px;
        transition: all 0.3s ease;
        font-weight: 500;
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 16px rgba(0, 212, 255, 0.3);
        filter: brightness(1.1);
        color: white;
    }

    .btn-outline-secondary {
        border: 2px solid #6c757d;
        border-radius: 12px;
        padding: 12px 24px;
        transition: all 0.3s ease;
        color: #6c757d;
    }

    .btn-outline-secondary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
        background: #6c757d;
        color: white;
    }

    .btn-outline-danger {
        border: 2px solid #dc3545;
        border-radius: 12px;
        padding: 12px 24px;
        transition: all 0.3s ease;
        color: #dc3545;
    }

    .btn-outline-danger:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 10px rgba(220, 53, 69, 0.3);
        background: #dc3545;
        color: white;
    }

    .icon-circle {
        background: var(--primary-gradient);
        border-radius: 50%;
        padding: 15px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 50px;
        height: 50px;
    }

    @@keyframes slideInDown {
        from {
            opacity: 0;
            transform: translateY(-30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-fade-in {
        animation: fadeInUp 0.6s ease-out;
    }

    @@media (max-width: 768px) {
        .page-header h1 {
            font-size: 2rem;
        }

        .info-label {
            width: 100px;
            font-size: 0.9rem;
        }

        .info-value {
            font-size: 0.9rem;
        }

        .btn-primary, .btn-outline-secondary, .btn-outline-danger {
            padding: 10px 16px;
            font-size: 0.9rem;
        }
    }
</style>

<!-- === TIÊU ĐỀ === -->
<div class="page-header animate-fade-in">
    <div class="d-flex justify-content-between align-items-center">
        <h1><i class="fas fa-briefcase me-3"></i>@ViewData["Title"] <small class="text-muted fs-6">ID: @Model.Id</small></h1>
    </div>
</div>

<!-- === CHI TIẾT NGÀNH NGHỀ === -->
<div class="details-card animate-fade-in">
    <div class="card-body p-4">
        <div class="d-flex align-items-center mb-4">
            <div class="icon-circle me-3">
                <i class="fas fa-briefcase text-white fa-lg"></i>
            </div>
            <h3 class="mb-0">@Model.Ten</h3>
        </div>

        <div class="info-section">
            <h6><i class="fas fa-info-circle me-2"></i>Thông tin cơ bản</h6>
            <div class="info-item">
                <div class="info-label">@Html.DisplayNameFor(model => model.Ten)</div>
                <div class="info-value">@Html.DisplayFor(model => model.Ten)</div>
            </div>
            <div class="info-item">
                <div class="info-label">@Html.DisplayNameFor(model => model.MoTa)</div>
                <div class="info-value">
                    @if (string.IsNullOrEmpty(Model.MoTa))
                    {
                        <span class="text-muted fst-italic">Không có mô tả</span>
                    }
                    else
                    {
                        <div class="description-box">@Html.DisplayFor(model => model.MoTa)</div>
                    }
                </div>
            </div>
        </div>

        <div class="d-flex gap-2 mt-4">
            <a asp-action="NganhNghe_Edit" asp-route-id="@Model.Id" class="btn btn-primary">
                <i class="fas fa-edit me-1"></i>Chỉnh sửa
            </a>
            <a asp-action="NganhNghe_Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger">
                <i class="fas fa-trash-alt me-1"></i>Xóa
            </a>
            <a asp-action="NganhNghe_Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i>Quay lại danh sách
            </a>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Animation cho details card
        const detailsCard = document.querySelector('.details-card');
        detailsCard.classList.add('animate-fade-in');

        // Animation cho info items
        const infoItems = document.querySelectorAll('.info-item');
        infoItems.forEach((item, index) => {
            item.style.animationDelay = `${index * 0.1}s`;
            item.classList.add('animate-fade-in');
        });

        // Button hover effects
        document.querySelectorAll('.btn').forEach(btn => {
            btn.addEventListener('mouseenter', function() {
                if (!this.disabled) {
                    this.style.transform = 'translateY(-2px)';
                }
            });
            btn.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
            });
        });
    });
</script>