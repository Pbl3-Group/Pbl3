@model HeThongTimViec.ViewModels.NguoiDungCaNhanDetailsViewModel
@using HeThongTimViec.Models
@using HeThongTimViec.Extensions
@{
    ViewData["Title"] = "Chi tiết người dùng: " + Model.User.HoTen;
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    :root {
        --primary-gradient: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, rgba(9, 9, 121, 1) 35%, rgba(0, 212, 255, 1) 100%);
        --success-gradient: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        --warning-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        --danger-gradient: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
        --info-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --glass-bg: rgba(255, 255, 255, 0.1);
        --glass-border: rgba(255, 255, 255, 0.2);
        --shadow-light: 0 8px 32px rgba(31, 38, 135, 0.15);
        --shadow-medium: 0 15px 35px rgba(31, 38, 135, 0.2);
        --shadow-heavy: 0 20px 40px rgba(31, 38, 135, 0.3);
    }

    * {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    body {
        background: #ffffff;
        min-height: 100vh;
        font-family: 'Roboto', 'Arial', sans-serif;
    }

    .glass-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 24px;
        box-shadow: var(--shadow-light);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .glass-card:hover {
        transform: translateY(-8px);
        box-shadow: var(--shadow-heavy);
        border-color: rgba(255, 255, 255, 0.4);
    }

    .avatar-container {
        position: relative;
        display: inline-block;
        margin-bottom: 1.5rem;
    }

    .avatar-placeholder, .avatar-img {
        width: 140px;
        height: 140px;
        border-radius: 50%;
        background: var(--primary-gradient);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 3.5rem;
        font-weight: 700;
        box-shadow: var(--shadow-medium);
        position: relative;
        overflow: hidden;
    }

    .avatar-img {
        background: none;
        object-fit: cover;
    }

    .avatar-container::before {
        content: '';
        position: absolute;
        top: -3px;
        left: -3px;
        right: -3px;
        bottom: -3px;
        border-radius: 50%;
        background: var(--primary-gradient);
        z-index: -1;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .avatar-container:hover::before {
        opacity: 1;
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0%, 100% { transform: scale(1); opacity: 0.7; }
        50% { transform: scale(1.05); opacity: 0.9; }
    }

    .status-badge {
        position: relative;
        padding: 0.6rem 1.2rem;
        border-radius: 50px;
        font-weight: 600;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border: none;
        overflow: hidden;
    }

    .status-badge.bg-success {
        background: var(--success-gradient);
        box-shadow: 0 4px 15px rgba(76, 175, 80, 0.4);
    }

    .status-badge.bg-danger {
        background: var(--danger-gradient);
        box-shadow: 0 4px 15px rgba(244, 67, 54, 0.4);
    }

    .modern-list-group {
        border: none;
        border-radius: 16px;
        overflow: hidden;
    }

    .modern-list-group .list-group-item {
        border: none;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        padding: 1rem 1.5rem;
        background: transparent;
        transition: all 0.3s ease;
    }

    .modern-list-group .list-group-item:hover {
        background: rgba(103, 126, 234, 0.05);
        transform: translateX(5px);
    }

    .modern-list-group .list-group-item:last-child {
        border-bottom: none;
    }

    .gradient-btn {
        border: none;
        border-radius: 12px;
        padding: 0.8rem 1.5rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        position: relative;
        overflow: hidden;
        box-shadow: var(--shadow-light);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .gradient-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
        transition: left 0.5s;
    }

    .gradient-btn:hover::before {
        left: 100%;
    }

    .gradient-btn:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-medium);
    }

    .btn-warning.gradient-btn {
        background: var(--warning-gradient);
        color: white;
    }

    .btn-danger.gradient-btn {
        background: var(--danger-gradient);
        color: white;
    }

    .btn-success.gradient-btn {
        background: var(--success-gradient);
        color: white;
    }

    .modern-tabs {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 16px 16px 0 0;
        border: none;
        padding: 0;
        margin: 0;
    }

    .modern-tabs .nav-link {
        border: none;
        border-radius: 0;
        padding: 1.2rem 1.5rem;
        color: rgba(0,0,0,0.6);
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.85rem;
        position: relative;
        background: transparent;
        transition: all 0.3s ease;
    }

    .modern-tabs .nav-link::before {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        width: 0;
        height: 3px;
        background: var(--primary-gradient);
        transform: translateX(-50%);
        transition: width 0.3s ease;
    }

    .modern-tabs .nav-link.active::before,
    .modern-tabs .nav-link:hover::before {
        width: 80%;
    }

    .modern-tabs .nav-link.active {
        background: rgba(255, 255, 255, 0.2);
        color: #333;
        border-color: transparent;
    }

    .activity-timeline {
        position: relative;
        padding-left: 30px;
        list-style: none;
        margin: 2rem 0;
    }

    .activity-timeline::before {
        content: '';
        position: absolute;
        left: 15px;
        top: 0;
        bottom: 0;
        width: 3px;
        background: var(--primary-gradient);
        border-radius: 2px;
        box-shadow: 0 0 10px rgba(103, 126, 234, 0.3);
    }

    .timeline-item {
        position: relative;
        padding-bottom: 2rem;
        animation: fadeInUp 0.6s ease forwards;
        opacity: 0;
        transform: translateY(30px);
    }

    .timeline-item:nth-child(1) { animation-delay: 0.1s; }
    .timeline-item:nth-child(2) { animation-delay: 0.2s; }
    .timeline-item:nth-child(3) { animation-delay: 0.3s; }
    .timeline-item:nth-child(4) { animation-delay: 0.4s; }
    .timeline-item:nth-child(5) { animation-delay: 0.5s; }

    @@keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .timeline-icon {
        position: absolute;
        left: 0;
        top: 8px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        background: white;
        font-size: 0.9rem;
        box-shadow: var(--shadow-light);
        z-index: 2;
    }

    .timeline-icon.text-primary { 
        background: linear-gradient(135deg, #fff 0%, #3c84ec 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(103, 126, 234, 0.4);
    }
    .timeline-icon.text-success { 
        background: linear-gradient(135deg, #8dfdc9 0%, #fff 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(76, 175, 80, 0.4);
    }
    .timeline-icon.text-warning { 
        background: linear-gradient(135deg, #112e58 0%, #366bb8 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(255, 193, 7, 0.4);
    }
    .timeline-icon.text-info { 
        background: linear-gradient(135deg, #112e58 0%, #366bb8 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(23, 162, 184, 0.4);
    }
    .timeline-icon.text-danger { 
        background: var(--danger-gradient);
        color: white;
        box-shadow: 0 4px 15px rgba(220, 53, 69, 0.4);
    }

    .timeline-content {
        padding-left: 50px;
        background: rgba(255, 255, 255, 0.7);
        backdrop-filter: blur(10px);
        border-radius: 16px;
        padding: 1.5rem;
        margin-left: 20px;
        box-shadow: var(--shadow-light);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .timeline-content:hover {
        transform: translateX(10px);
        box-shadow: var(--shadow-medium);
    }

    .modern-table {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border-radius: 16px;
        overflow: hidden;
        border: none;
        box-shadow: var(--shadow-light);
    }

    .modern-table thead th {
        background: linear-gradient(135deg, #112e58 0%, #366bb8 100%);
        color: white;
        border: none;
        padding: 1.2rem 1rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.85rem;
    }

    .modern-table tbody tr {
        border: none;
        transition: all 0.3s ease;
    }

    .modern-table tbody tr:hover {
        background: rgba(103, 126, 234, 0.1);
        transform: scale(1.01);
    }

    .modern-table tbody td {
        border: none;
        padding: 1rem;
        border-bottom: 1px solid rgba(0,0,0,0.05);
    }

    .modern-badge {
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .modern-badge.bg-primary {
        background: linear-gradient(135deg, #ffc413 0%, #fff4d4 100%);
        border: none;
    }

    .modern-badge.bg-warning {
        background: var(--warning-gradient);
        color: white;
        border: none;
    }

    .header-section {
        background: linear-gradient(135deg, #112e58 0%, #366bb8 100%);
        backdrop-filter: blur(20px);
        border-radius: 20px;
        padding: 24px;
        margin-bottom: 32px;
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .header-title {
        background: linear-gradient(135deg, #f1f5f9, #ced4da);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-weight: 800;
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
    }

    .header-subtitle {
        color: #f1f5f9;
        font-size: 1.1rem;
        font-weight: 500;
    }

    .back-btn {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        border-radius: 12px;
        padding: 0.8rem 1.5rem;
        color: #e2e8f0;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .back-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        transform: translateY(-2px);
        box-shadow: var(--shadow-light);
        color: #333;
    }

    .info-row dt {
        font-weight: 700;
        color: #333;
        margin-bottom: 0.5rem;
    }

    .info-row dd {
        color: #666;
        margin-bottom: 1rem;
        padding-left: 1rem;
        border-left: 3px solid var(--primary-gradient);
        background: rgba(103, 126, 234, 0.05);
        padding: 0.5rem 1rem;
        border-radius: 8px;
    }

    .floating-action {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        z-index: 1000;
    }

    .floating-btn {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: var(--primary-gradient);
        border: none;
        color: white;
        font-size: 1.5rem;
        box-shadow: var(--shadow-medium);
        transition: all 0.3s ease;
    }

    .floating-btn:hover {
        transform: scale(1.1) rotate(360deg);
        box-shadow: var(--shadow-heavy);
    }

    .modal-content {
        border-radius: 20px;
        border: none;
        box-shadow: var(--shadow-heavy);
        backdrop-filter: blur(20px);
    }

    .modal-header {
        background: var(--primary-gradient);
        color: white;
        border-radius: 20px 20px 0 0;
        border: none;
    }

    .section-divider {
        height: 1px;
        background: linear-gradient(90deg, transparent, rgba(103, 126, 234, 0.3), transparent);
        margin: 2rem 0;
    }

    @@media (max-width: 768px) {
        .header-title {
            font-size: 2rem;
        }
        
        .glass-card {
            margin-bottom: 1rem;
        }
        
        .timeline-content {
            margin-left: 10px;
            padding: 1rem;
        }
        
        .floating-action {
            bottom: 1rem;
            right: 1rem;
        }
    }

    .loading-shimmer {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: shimmer 2s infinite;
    }

    @@keyframes shimmer {
        0% { background-position: -200% 0; }
        100% { background-position: 200% 0; }
    }
</style>

<div class="header-section">
    <div class="d-flex justify-content-between align-items-center flex-wrap">
        <div>
            <h1 class="header-title">@Model.User.HoTen</h1>
            <p class="header-subtitle mb-0">Xem thông tin chi tiết, hoạt động, công việc và báo cáo liên quan đến người dùng.</p>
        </div>
        <a asp-controller="NguoiDung" asp-action="CaNhan" class="back-btn">
            <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách
        </a>
    </div>
</div>

<div class="row g-4">
    <!-- CỘT THÔNG TIN BÊN TRÁI -->
    <div class="col-lg-4">
        <div class="glass-card sticky-top" style="top: 20px;">
            <div class="card-body text-center p-4">
                <div class="avatar-container">
                    @if (string.IsNullOrEmpty(Model.User.UrlAvatar))
                    {
                        <div class="avatar-placeholder">
                            @Model.User.HoTen.Trim().Split(' ').Last().FirstOrDefault()
                        </div>
                    }
                    else
                    {
                        <img src="@Model.User.UrlAvatar" alt="Avatar của @Model.User.HoTen" class="avatar-img" onerror="this.onerror=null; this.src='/images/default-avatar.png';">
                    }
                </div>

                <h3 class="mb-2 fw-bold">@Model.User.HoTen</h3>
                <div class="text-muted mb-3 d-flex align-items-center justify-content-center">
                    <i class="fas fa-user me-2"></i>
                    <span>@Model.User.LoaiTk.GetDisplayName()</span>
                </div>
                <span class="status-badge @(Model.User.TrangThaiTk == TrangThaiTaiKhoan.kichhoat ? "bg-success" : "bg-danger")">
                    @Model.User.TrangThaiTk.GetDisplayName()
                </span>
            </div>
            
            <ul class="modern-list-group list-group-flush">
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-id-card me-3 text-primary"></i>
                        <strong>ID</strong>
                    </div>
                    <span class="text-muted">@Model.User.Id</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-envelope me-3 text-info"></i>
                        <strong>Email</strong>
                    </div>
                    <a href="mailto:@Model.User.Email" class="text-decoration-none">@Model.User.Email</a>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-phone me-3 text-success"></i>
                        <strong>Điện thoại</strong>
                    </div>
                    <span class="text-muted">@(Model.User.Sdt ?? "N/A")</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-calendar-plus me-3 text-warning"></i>
                        <strong>Tham gia</strong>
                    </div>
                    <span class="text-muted">@Model.User.NgayTao.ToString("dd/MM/yyyy HH:mm")</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-edit me-3 text-info"></i>
                        <strong>Cập nhật</strong>
                    </div>
                    <span class="text-muted">@Model.User.NgayCapNhat.ToString("dd/MM/yyyy HH:mm")</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-sign-in-alt me-3 text-secondary"></i>
                        <strong>Đăng nhập cuối</strong>
                    </div>
                    <span class="text-muted">@(Model.User.LanDangNhapCuoi?.ToString("dd/MM/yyyy HH:mm") ?? "Chưa có")</span>
                </li>
            </ul>
            
            <div class="card-body p-4">
                <div class="d-grid gap-3">
                    <a asp-controller="NguoiDung" asp-action="ChinhSuaCaNhan" asp-route-id="@Model.User.Id" class="btn gradient-btn btn-warning">
                        <i class="fas fa-edit me-2"></i>Chỉnh sửa
                    </a>
                    @if (Model.User.TrangThaiTk == TrangThaiTaiKhoan.kichhoat)
                    {
                        <button type="button" class="btn gradient-btn btn-danger" data-bs-toggle="modal" data-bs-target="#banUserModal">
                            <i class="fas fa-user-lock me-2"></i>Cấm tài khoản
                        </button>
                    }
                    else
                    {
                        <form asp-controller="NguoiDung" asp-action="CapNhatTrangThai" method="post" class="d-grid">
                            <input type="hidden" name="id" value="@Model.User.Id" />
                            <input type="hidden" name="newStatus" value="@TrangThaiTaiKhoan.kichhoat" />
                            <input type="hidden" name="redirectUrl" value="@(Context.Request.Path + Context.Request.QueryString)" />
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn gradient-btn btn-success">
                                <i class="fas fa-user-check me-2"></i>Kích hoạt
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- CỘT NỘI DUNG TAB BÊN PHẢI -->
    <div class="col-lg-8">
        <div class="glass-card">
            <div class="card-header p-0 border-0">
                <ul class="nav nav-tabs modern-tabs nav-fill" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#info" type="button">
                            <i class="fas fa-info-circle me-2"></i>Thông tin
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#activity" type="button">
                            <i class="fas fa-history me-2"></i>Hoạt động
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#jobs" type="button">
                            <i class="fas fa-briefcase me-2"></i>Việc làm
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#reports" type="button">
                            <i class="fas fa-flag me-2"></i>Báo cáo
                        </button>
                    </li>
                </ul>
            </div>
            
            <div class="tab-content p-4">
                <!-- === TAB THÔNG TIN === -->
                <div class="tab-pane fade show active" id="info" role="tabpanel">
                    <div class="mb-4">
                        <h4 class="mb-4 d-flex align-items-center">
                            <i class="fas fa-user-circle me-3 text-primary"></i>
                            Thông tin bổ sung
                        </h4>
                        <dl class="row info-row">
                            <dt class="col-sm-4 col-md-3">Giới tính:</dt>
                            <dd class="col-sm-8 col-md-9">@(Model.User.GioiTinh?.GetDisplayName() ?? "Chưa cập nhật")</dd>
                            <dt class="col-sm-4 col-md-3">Ngày sinh:</dt>
                            <dd class="col-sm-8 col-md-9">@(Model.User.NgaySinh?.ToString("dd/MM/yyyy") ?? "Chưa cập nhật")</dd>
                            <dt class="col-sm-4 col-md-3">Tỉnh/Thành phố:</dt>
                            <dd class="col-sm-8 col-md-9">@(Model.User.ThanhPho?.Ten ?? "Chưa cập nhật")</dd>
                            <dt class="col-sm-4 col-md-3">Quận/Huyện:</dt>
                            <dd class="col-sm-8 col-md-9">@(Model.User.QuanHuyen?.Ten ?? "Chưa cập nhật")</dd>
                            <dt class="col-sm-4 col-md-3">Địa chỉ chi tiết:</dt>
                            <dd class="col-sm-8 col-md-9">@(Model.User.DiaChiChiTiet ?? "Chưa cập nhật")</dd>
                        </dl>
                    </div>
                    
                    <div class="section-divider"></div>
                    
                    <div>
                        <h4 class="mb-4 d-flex align-items-center">
                            <i class="fas fa-file-user me-3 text-success"></i>
                            Hồ sơ liên quan
                        </h4>
                        @if(Model.User.HoSoUngVien != null)
                        {
                            var profile = Model.User.HoSoUngVien;
                            <dl class="row info-row">
                                <dt class="col-sm-4 col-md-3">Tiêu đề HS:</dt>
                                <dd class="col-sm-8 col-md-9">@(profile.TieuDeHoSo ?? "Chưa đặt")</dd>
                                <dt class="col-sm-4 col-md-3">Vị trí MM:</dt>
                                <dd class="col-sm-8 col-md-9">@(profile.ViTriMongMuon ?? "Chưa đặt")</dd>
                                <dt class="col-sm-4 col-md-3">Mức lương MM:</dt>
                                <dd class="col-sm-8 col-md-9">@(profile.MucLuongMongMuon > 0 ? profile.MucLuongMongMuon?.ToString("N0") + " VNĐ" : "Thỏa thuận") (@(profile.LoaiLuongMongMuon?.GetDisplayName() ?? "N/A"))</dd>
                                <dt class="col-sm-4 col-md-3">Trạng thái TV:</dt>
                                <dd class="col-sm-8 col-md-9">@profile.TrangThaiTimViec.GetDisplayName()</dd>
                                <dt class="col-sm-4 col-md-3">Cho phép TK:</dt>
                                <dd class="col-sm-8 col-md-9">@(profile.ChoPhepTimKiem ? "Cho phép" : "Không cho phép")</dd>
                                <dt class="col-sm-4 col-md-3">CV:</dt>
                                <dd class="col-sm-8 col-md-9">
                                    @if (!string.IsNullOrEmpty(profile.UrlCvMacDinh))
                                    {
                                        <a href="@profile.UrlCvMacDinh" target="_blank" class="text-decoration-none">
                                            <i class="fas fa-file-pdf me-2 text-danger"></i>Xem CV 
                                            <i class="fas fa-external-link-alt fa-xs ms-1"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Chưa tải lên</span>
                                    }
                                </dd>
                            </dl>
                        } 
                        else 
                        { 
                            <div class="text-center py-5">
                                <i class="fas fa-user-slash text-muted" style="font-size: 3rem;"></i>
                                <p class="text-muted mt-3 mb-0">Người dùng chưa tạo hồ sơ ứng viên.</p>
                            </div>
                        }
                    </div>
                </div>
                
                <!-- === TAB HOẠT ĐỘNG === -->
                <div class="tab-pane fade" id="activity" role="tabpanel">
                    <h4 class="mb-4 d-flex align-items-center">
                        <i class="fas fa-clock me-3 text-warning"></i>
                        Lịch sử hoạt động gần đây
                    </h4>
                    @if (!Model.ActivityLogs.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-history text-muted" style="font-size: 3rem;"></i>
                            <p class="text-muted mt-3 mb-0">Không có hoạt động nào được ghi nhận.</p>
                        </div>
                    }
                    else
                    {
                        <ul class="activity-timeline">
                            @foreach (var log in Model.ActivityLogs)
                            {
                                <li class="timeline-item">
                                    <div class="timeline-icon @log.IconColorClass">
                                        <i class="@log.IconClass"></i>
                                    </div>
                                    <div class="timeline-content">
                                        <h6 class="fw-bold mb-2 text-primary">@log.ActivityType</h6>
                                        <p class="mb-2 text-dark">@Html.Raw(log.Description)</p>
                                        <small class="text-muted d-flex align-items-center">
                                            <i class="fas fa-clock me-2"></i>
                                            @log.Timestamp.ToString("dd/MM/yyyy HH:mm:ss")
                                        </small>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                </div>
                
                <!-- === TAB VIỆC LÀM === -->
                <div class="tab-pane fade" id="jobs" role="tabpanel">
                    <div class="mb-5">
                        <h4 class="mb-4 d-flex align-items-center justify-content-between">
                            <span>
                                <i class="fas fa-paper-plane me-3 text-primary"></i>
                                Việc làm đã ứng tuyển
                            </span>
                            <span class="modern-badge bg-primary">@Model.User.UngTuyens.Count</span>
                        </h4>
                        <div class="table-responsive">
                            <table class="table modern-table">
                               <thead>
                                   <tr>
                                       <th><i class="fas fa-briefcase me-2"></i>Vị trí</th>
                                       <th><i class="fas fa-building me-2"></i>Công ty</th>
                                       <th><i class="fas fa-calendar me-2"></i>Ngày nộp</th>
                                       <th><i class="fas fa-chart-line me-2"></i>Trạng thái</th>
                                   </tr>
                               </thead>
                               <tbody>
                                    @if(Model.User.UngTuyens.Any())
                                    {
                                        @foreach(var ut in Model.User.UngTuyens.OrderByDescending(x => x.NgayNop)) 
                                        {
                                            <tr>
                                                <td class="fw-semibold">@ut.TinTuyenDung.TieuDe</td>
                                                <td>@(ut.TinTuyenDung.NguoiDang.HoSoDoanhNghiep?.TenCongTy ?? "N/A")</td>
                                                <td>@ut.NgayNop.ToString("dd/MM/yyyy HH:mm")</td>
                                                <td><span class="modern-badge bg-primary">@ut.TrangThai.GetDisplayName()</span></td>
                                            </tr>
                                        }
                                    } 
                                    else 
                                    {
                                        <tr>
                                            <td colspan="4" class="text-center py-5">
                                                <i class="fas fa-inbox text-muted" style="font-size: 2rem;"></i>
                                                <p class="text-muted mt-2 mb-0">Chưa ứng tuyển việc làm nào.</p>
                                            </td>
                                        </tr>
                                    }
                               </tbody>
                            </table>
                        </div>
                    </div>
                    
                    <div class="section-divider"></div>
                    
                    <div>
                        <h4 class="mb-4 d-flex align-items-center justify-content-between">
                            <span>
                                <i class="fas fa-heart me-3 text-danger"></i>
                                Việc làm đã lưu
                            </span>
                            <span class="modern-badge bg-danger">@Model.User.TinDaLuus.Count</span>
                        </h4>
                        <div class="table-responsive">
                            <table class="table modern-table">
                                <thead>
                                    <tr>
                                       <th><i class="fas fa-briefcase me-2"></i>Vị trí</th>
                                       <th><i class="fas fa-building me-2"></i>Công ty</th>
                                       <th><i class="fas fa-calendar me-2"></i>Ngày lưu</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if(Model.User.TinDaLuus.Any())
                                    {
                                        @foreach(var tdl in Model.User.TinDaLuus.OrderByDescending(x => x.NgayLuu)) 
                                        {
                                            <tr>
                                                <td class="fw-semibold">@tdl.TinTuyenDung.TieuDe</td>
                                                <td>@(tdl.TinTuyenDung.NguoiDang.HoSoDoanhNghiep?.TenCongTy ?? "N/A")</td>
                                                <td>@tdl.NgayLuu.ToString("dd/MM/yyyy HH:mm")</td>
                                            </tr>
                                        }
                                    } 
                                    else 
                                    {
                                        <tr>
                                            <td colspan="3" class="text-center py-5">
                                                <i class="fas fa-heart-broken text-muted" style="font-size: 2rem;"></i>
                                                <p class="text-muted mt-2 mb-0">Chưa lưu việc làm nào.</p>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- === TAB BÁO CÁO === -->
                <div class="tab-pane fade" id="reports" role="tabpanel">
                    <h4 class="mb-4 d-flex align-items-center justify-content-between">
                        <span>
                            <i class="fas fa-exclamation-triangle me-3 text-warning"></i>
                            Báo cáo do người này gửi đi
                        </span>
                        <span class="modern-badge bg-warning">@Model.User.BaoCaoViPhamsDaGui.Count</span>
                    </h4>
                    <div class="table-responsive">
                        <table class="table modern-table">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-file-alt me-2"></i>Tin bị BC</th>
                                    <th><i class="fas fa-question-circle me-2"></i>Lý do</th>
                                    <th><i class="fas fa-calendar me-2"></i>Ngày BC</th>
                                    <th><i class="fas fa-cog me-2"></i>Trạng thái XL</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if(Model.User.BaoCaoViPhamsDaGui.Any())
                                {
                                    @foreach(var bc in Model.User.BaoCaoViPhamsDaGui.OrderByDescending(x => x.NgayBaoCao)) 
                                    {
                                        <tr>
                                            <td class="fw-semibold">@bc.TinTuyenDung.TieuDe</td>
                                            <td>@bc.LyDo.GetDisplayName()</td>
                                            <td>@bc.NgayBaoCao.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td><span class="modern-badge bg-warning text-dark">@bc.TrangThaiXuLy.GetDisplayName()</span></td>
                                        </tr>
                                    }
                                } 
                                else 
                                {
                                    <tr>
                                        <td colspan="4" class="text-center py-5">
                                            <i class="fas fa-shield-alt text-muted" style="font-size: 2rem;"></i>
                                            <p class="text-muted mt-2 mb-0">Chưa gửi báo cáo nào.</p>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Floating Action Button -->
<div class="floating-action">
    <button class="floating-btn" onclick="window.scrollTo({top: 0, behavior: 'smooth'})" title="Lên đầu trang">
        <i class="fas fa-arrow-up"></i>
    </button>
</div>

<!-- Modal xác nhận Cấm -->
<div class="modal fade" id="banUserModal" tabindex="-1" aria-labelledby="banUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <form asp-controller="NguoiDung" asp-action="CapNhatTrangThai" method="post">
            <input type="hidden" name="id" value="@Model.User.Id" />
            <input type="hidden" name="newStatus" value="@TrangThaiTaiKhoan.bidinhchi" />
            <input type="hidden" name="redirectUrl" value="@(Context.Request.Path + Context.Request.QueryString)" />
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="banUserModalLabel">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Xác nhận Cấm Tài Khoản
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="text-center mb-4">
                        <i class="fas fa-user-lock text-danger" style="font-size: 3rem;"></i>
                    </div>
                    <p class="text-center mb-3">
                        Bạn có chắc chắn muốn cấm tài khoản của <strong class="text-danger">@Model.User.HoTen</strong> không?
                    </p>
                    <div class="alert alert-warning d-flex align-items-center" role="alert">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <div>
                            <strong>Cảnh báo:</strong> Người dùng sẽ không thể đăng nhập vào hệ thống sau khi bị cấm.
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0 justify-content-center">
                    <button type="button" class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Hủy bỏ
                    </button>
                    <button type="submit" class="btn gradient-btn btn-danger px-4">
                        <i class="fas fa-ban me-2"></i>Xác nhận cấm
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    // Smooth scrolling for internal links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });

    // Add loading states to buttons
    document.querySelectorAll('form').forEach(form => {
        form.addEventListener('submit', function(e) {
            const submitBtn = form.querySelector('button[type="submit"]');
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang xử lý...';
            }
        });
    });

    // Enhance table interactions
    document.querySelectorAll('.modern-table tbody tr').forEach(row => {
        row.addEventListener('mouseenter', function() {
            this.style.transform = 'scale(1.02)';
        });
        row.addEventListener('mouseleave', function() {
            this.style.transform = 'scale(1)';
        });
    });

    // Add ripple effect to buttons
    document.querySelectorAll('.gradient-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            let ripple = document.createElement('span');
            ripple.classList.add('ripple');
            this.appendChild(ripple);

            let x = e.clientX - e.target.offsetLeft;
            let y = e.clientY - e.target.offsetTop;

            ripple.style.left = x + 'px';
            ripple.style.top = y + 'px';

            setTimeout(() => {
                ripple.remove();
            }, 600);
        });
    });

    // Animate cards on scroll
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    document.querySelectorAll('.glass-card').forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(card);
    });

    // Enhanced tab switching with animation
    document.querySelectorAll('[data-bs-toggle="tab"]').forEach(tab => {
        tab.addEventListener('shown.bs.tab', function (e) {
            const targetPane = document.querySelector(this.getAttribute('data-bs-target'));
            if (targetPane) {
                targetPane.style.animation = 'fadeInUp 0.5s ease forwards';
            }
        });
    });

    // Auto-refresh timestamp display
    function updateTimestamps() {
        document.querySelectorAll('[data-timestamp]').forEach(element => {
            const timestamp = new Date(element.getAttribute('data-timestamp'));
            const now = new Date();
            const diff = now - timestamp;
            
            if (diff < 60000) {
                element.textContent = 'Vừa xong';
            } else if (diff < 3600000) {
                element.textContent = Math.floor(diff / 60000) + ' phút trước';
            } else if (diff < 86400000) {
                element.textContent = Math.floor(diff / 3600000) + ' giờ trước';
            }
        });
    }

    // Update every minute
    setInterval(updateTimestamps, 60000);

    // Initialize tooltips
    if (typeof bootstrap !== 'undefined') {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    }
</script>

<style>
    .ripple {
        position: absolute;
        border-radius: 50%;
        transform: scale(0);
        animation: rippleEffect 0.6s linear;
        background-color: rgba(255, 255, 255, 0.6);
    }

    @@keyframes rippleEffect {
        to {
            transform: scale(4);
            opacity: 0;
        }
    }
</style>