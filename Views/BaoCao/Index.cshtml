@model HeThongTimViec.ViewModels.BaoCao.DanhSachBaoCaoViewModel
@using HeThongTimViec.Extensions
@using HeThongTimViec.Utils
@using HeThongTimViec.Models
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@{
    ViewData["Title"] = "Báo cáo của tôi";
    var requestToken = antiforgery.GetAndStoreTokens(Context).RequestToken;
    var defaultCompanyLogo = "/images/default-company.png";
    var defaultAvatar = "/images/default-avatar.png";

    var totalReportCount = Model.BaoCaos?.TotalCount ?? 0;
    var statusCounts = new Dictionary<TrangThaiXuLyBaoCao, int>();
    if (Model.BaoCaos != null && Model.BaoCaos.Any())
    {
        statusCounts = Model.BaoCaos
            .GroupBy(bc => bc.TrangThaiXuLy)
            .ToDictionary(g => g.Key, g => g.Count());
    }

    var orderedReportStatuses = new Dictionary<TrangThaiXuLyBaoCao, string> {
        { TrangThaiXuLyBaoCao.moi, "fas fa-bell" },
        { TrangThaiXuLyBaoCao.daxemxet, "fas fa-hourglass-half" },
        { TrangThaiXuLyBaoCao.daxuly, "fas fa-check-circle" },
        { TrangThaiXuLyBaoCao.boqua, "fas fa-eye-slash" }
    };
    var currentTrangThaiFilter = Model.trangThai;
    var currentTuKhoaFilter = Model.tuKhoa;
    var currentPageSize = Model.pageSize; // Lấy pageSize hiện tại
}
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
@* ĐÃ XÓA LINK animate.css *@
@*
    NÊN TẠO FILE CSS RIÊNG (VÍ DỤ: wwwroot/css/baocao-styles.css)
    VÀ LINK VÀO ĐÂY: <link rel="stylesheet" href="~/css/baocao-styles.css" asp-append-version="true" />
*@
<style>
    /* --- GENERAL IMPROVEMENTS (ADAPTED FOR BAOCAO) --- */
    .page-header-report { padding: 1.5rem; background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; margin-bottom: 2rem; border-radius: 0.5rem; }
    .page-header-report h1 { color: var(--bs-danger); font-weight: 600; font-size: 1.75rem; }
    .page-header-report p { color: #6c757d; font-size: 0.95rem; }
    .header-icon-report { width: 50px; height: 50px; background-color: rgba(var(--bs-danger-rgb),0.1); border-radius: 12px; display: flex; justify-content: center; align-items: center; margin-right: 15px; color: var(--bs-danger); font-size:1.5rem; }

    /* --- STATS CARDS (ADAPTED FOR BAOCAO) --- */
    .stats-card-report { background-color: #fff; border-radius: 0.75rem; box-shadow: 0 4px 12px rgba(0,0,0,0.06); transition: all 0.3s ease; padding: 1.25rem; height: 100%; border: 1px solid #e9ecef; }
    .stats-card-report:hover { transform: translateY(-5px) scale(1.02); box-shadow: 0 8px 20px rgba(0,0,0,0.1); }
    .stats-card-report-body { display: flex; align-items: center; }
    .stats-icon-report { width: 45px; height: 45px; border-radius: 10px; display: flex; justify-content: center; align-items: center; margin-right: 1rem; font-size: 1.3rem; }
    .stats-info-report { flex: 1; }
    .stats-title-report { font-size: 0.8rem; color: #6c757d; margin-bottom: 0.15rem; font-weight: 500; text-transform: uppercase; letter-spacing: 0.5px; }
    .stats-number-report { font-size: 1.6rem; font-weight: 700; margin: 0; color: #212529; }

    /* Soft background colors for stats icons */
    .bg-primary-soft { background-color: rgba(var(--bs-primary-rgb),0.1); color: var(--bs-primary);}
    .bg-success-soft { background-color: rgba(var(--bs-success-rgb),0.1); color: var(--bs-success); }
    .bg-warning-soft { background-color: rgba(var(--bs-warning-rgb),0.1); color: var(--bs-warning); }
    .bg-info-soft { background-color: rgba(var(--bs-info-rgb),0.1); color: var(--bs-info); }
    .bg-danger-soft { background-color: rgba(var(--bs-danger-rgb),0.1); color: var(--bs-danger); }
    .bg-secondary-soft { background-color: rgba(var(--bs-secondary-rgb),0.1); color: var(--bs-secondary);}


    /* --- FILTER SECTION --- */
    .filter-section-report { background-color: #fff; border-radius: 0.75rem; padding: 1.5rem; border: 1px solid #e9ecef; margin-bottom: 2rem; box-shadow: 0 2px 8px rgba(0,0,0,0.04); }

    /* --- STATUS TABS --- */
    .status-tabs-report .nav-pills .nav-link { border-radius: 50px; padding: 0.5rem 1.25rem; font-weight: 500; font-size:0.85rem; color: #495057; background-color: #e9ecef; margin-right: 0.5rem; margin-bottom: 0.5rem; border: 1px solid transparent; transition: all 0.25s ease-in-out; }
    .status-tabs-report .nav-pills .nav-link:hover { background-color: #d8dde2; transform: translateY(-2px); box-shadow: 0 2px 5px rgba(0,0,0,0.08); }
    .status-tabs-report .nav-pills .nav-link.active { background-color: var(--bs-danger); color: #fff; box-shadow: 0 4px 10px rgba(var(--bs-danger-rgb),0.3); }
    .status-tabs-report .nav-pills .nav-link.disabled { background-color: #f8f9fa; color: #adb5bd; pointer-events: none; }
    .status-tabs-report .nav-pills .nav-link .badge { font-size: 0.7em; vertical-align: middle; margin-left: 0.5rem; padding: 0.3em 0.5em; }
    .status-tabs-report .nav-pills .nav-link.active .badge { background-color: rgba(255,255,255,0.2) !important; color: #fff !important; }


    /* --- REPORT LIST & ITEMS --- */
    .report-item-card { transition: background-color 0.2s ease-in-out, transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out; border-radius: 0.5rem; margin-bottom: 0.75rem; border: 1px solid #e9ecef; }
    .report-item-card:hover { background-color: #f8f9fa; transform: translateX(3px); box-shadow: -2px 0 8px rgba(0,0,0,0.04); }

    .report-job-title a { text-decoration: none; color: var(--bs-primary); }
    .report-job-title a:hover { text-decoration: underline; }
    .job-info-muted { font-size: 0.9rem; color: #6c757d; }
    .job-meta-info span { margin-right: 15px; font-size: 0.85rem; color: #555; }
    .report-tag { background-color: #e9ecef; color: #343a40; padding: 0.2em 0.6em; border-radius: 0.25rem; font-size: 0.75rem; margin-right: 0.3rem; margin-bottom:0.3rem; display:inline-block; }

    .report-reason-section { background-color: #f8f9fa; border: 1px solid #eee; padding: 0.75rem; border-radius: 0.3rem; font-size:0.9rem; }
    .report-reason-text { color: var(--bs-danger); font-weight: 500; }
    .report-detail-text { white-space: pre-wrap; word-break: break-word; color: #404040; font-size: 0.88rem; margin-top: 0.25rem; max-height: 100px; overflow-y: auto; }
    .admin-reply-section { border-top: 1px dashed #ddd; margin-top: 0.75rem; padding-top: 0.75rem; background-color: #fffaf0; padding:10px; border-radius:5px; border:1px solid #ffe5b8; }
    .admin-message { white-space: pre-wrap; word-break: break-word; font-size: 0.88rem; color: #58401c; }
    .report-time { font-size: 0.8rem; color: #6c757d; }
    .status-badge { font-size: 0.8rem; padding: 0.4em 0.8em; border-radius: 50px; font-weight: 500; }
    .action-buttons-col .btn-sm { padding: 0.3rem 0.6rem; font-size: 0.8rem; border-radius: 50px; font-weight:500; }

    /* --- PAGINATION --- */
    .pagination-report-custom .page-link { border-radius: 50px !important; margin: 0 3px; color: var(--bs-danger); border: 1px solid #dee2e6; font-size: 0.875rem; padding: 0.45rem 0.85rem; transition: all 0.2s ease-in-out; }
    .pagination-report-custom .page-item.active .page-link { background-color: var(--bs-danger); border-color: var(--bs-danger); color: white; box-shadow: 0 2px 5px rgba(var(--bs-danger-rgb),0.25); }
    .pagination-report-custom .page-item.disabled .page-link { color: #adb5bd; }
    .pagination-report-custom .page-item .page-link:hover { background-color: rgba(var(--bs-danger-rgb),0.1); border-color: rgba(var(--bs-danger-rgb),0.3); transform: translateY(-2px); }
    .pagination-report-custom .page-item.active .page-link:hover { background-color: var(--bs-danger); }

    /* --- EMPTY STATE --- */
    .empty-state-report { padding: 3rem 1rem; background-color: #fff; border-radius: 0.75rem; text-align: center; border: 1px solid #e9ecef; margin-top:1rem; }
    .empty-state-report .icon { font-size: 3.5rem; color: #ced4da; margin-bottom: 1rem; }
    .empty-state-report .message p { font-size: 1.05rem; color: #495057; }
</style>

<div class="container py-4">
    <div class="app-container-report">
        <!-- Page Header -->
        <div class="page-header-report d-flex align-items-center mb-4">
            <div class="header-icon-report">
                <i class="fas fa-flag"></i>
            </div>
            <div>
                <h1 class="h3 mb-0">@ViewData["Title"]</h1>
                <p class="mb-0 text-muted">Theo dõi và quản lý các báo cáo vi phạm bạn đã gửi.</p>
            </div>
        </div>

        <!-- Stats Summary -->
        <div class="stats-summary-report mb-4">
            <div class="row g-3">
                <div class="col-lg col-md-4 col-6">
                    <div class="stats-card-report">
                        <div class="stats-card-report-body">
                            <div class="stats-icon-report bg-primary-soft"> <i class="fas fa-list-ul"></i> </div>
                            <div class="stats-info-report"> <h5 class="stats-title-report">Tổng báo cáo</h5> <p class="stats-number-report">@totalReportCount</p> </div>
                        </div>
                    </div>
                </div>
                @if (statusCounts != null)
                {
                    foreach (var statusEntry in orderedReportStatuses)
                    {
                        var statusEnum = statusEntry.Key;
                        var count = statusCounts.ContainsKey(statusEnum) ? statusCounts[statusEnum] : 0;
                        
                        string colorClass = statusEnum switch {
                            TrangThaiXuLyBaoCao.moi => "bg-secondary-soft",
                            TrangThaiXuLyBaoCao.daxemxet => "bg-info-soft",
                            TrangThaiXuLyBaoCao.daxuly => "bg-success-soft",
                            TrangThaiXuLyBaoCao.boqua => "bg-warning-soft",
                            _ => "bg-light text-dark"
                        };
                        string iconClass = statusEntry.Value;

                        <div class="col-lg col-md-4 col-6">
                            <div class="stats-card-report">
                                <div class="stats-card-report-body">
                                    <div class="stats-icon-report @colorClass"> <i class="@iconClass"></i> </div>
                                    <div class="stats-info-report"> <h5 class="stats-title-report">@statusEnum.GetDisplayName()</h5> <p class="stats-number-report">@count</p> </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Filter Section -->
        <div class="filter-section-report mb-4">
            @await Html.PartialAsync("_BaoCaoFilterPartial", Model)
        </div>

        <!-- Status Tabs -->
        <div class="status-tabs-report mb-4">
            <ul class="nav nav-pills flex-column flex-sm-row nav-fill">
                <li class="nav-item me-sm-2 mb-1 mb-sm-0">
                    <a class="nav-link @(currentTrangThaiFilter == null ? "active" : "") d-flex justify-content-center justify-content-sm-between align-items-center"
                       asp-action="Index" asp-controller="BaoCao"
                       asp-route-tuKhoa="@currentTuKhoaFilter"
                       asp-route-pageSize="@currentPageSize">
                        <span><i class="fas fa-layer-group me-2"></i>Tất cả</span>
                        <span class="badge rounded-pill @(currentTrangThaiFilter == null ? "bg-white text-danger" :"bg-light text-dark")">@totalReportCount</span>
                    </a>
                </li>
                @if (statusCounts != null)
                {
                    foreach (var statusEntry in orderedReportStatuses)
                    {
                        var statusEnum = statusEntry.Key;
                        var iconClass = statusEntry.Value;
                        var count = statusCounts.ContainsKey(statusEnum) ? statusCounts[statusEnum] : 0;
                        var isDisabled = count == 0 && currentTrangThaiFilter != statusEnum;

                        <li class="nav-item me-sm-2 mb-1 mb-sm-0">
                            <a class="nav-link @(currentTrangThaiFilter == statusEnum ? "active" : "") @(isDisabled ? "disabled" : "") d-flex justify-content-center justify-content-sm-between align-items-center"
                               asp-action="Index" asp-controller="BaoCao"
                               asp-route-trangThai="@statusEnum"
                               asp-route-tuKhoa="@currentTuKhoaFilter"
                               asp-route-pageSize="@currentPageSize"
                               title="@(isDisabled ? "Chưa có báo cáo ở trạng thái này" : statusEnum.GetDisplayName())">
                                <span><i class="@iconClass me-2"></i>@statusEnum.GetDisplayName()</span>
                                <span class="badge rounded-pill @(currentTrangThaiFilter == statusEnum ? "bg-white text-danger" :"bg-light text-dark")">@count</span>
                            </a>
                        </li>
                    }
                }
            </ul>
        </div>

        <!-- Alert Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i> @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Report List -->
        @if (Model.BaoCaos != null && Model.BaoCaos.Any())
        {
            <div class="reports-container">
                @if(Model.BaoCaos.TotalCount > 0)
                {
                    <h5 class="text-muted mb-3">
                        <i class="fas fa-list-ul me-2"></i> Hiển thị @Model.BaoCaos.Count trên tổng số @Model.BaoCaos.TotalCount báo cáo
                    </h5>
                }
                
                <div id="reportListContainer" class="list-group">
                    @foreach (var (item, index) in Model.BaoCaos.Select((value, i) => (value, i)))
                    {
                        var finalLogoUrl = item.LoaiTkNguoiDang == LoaiTaiKhoan.doanhnghiep
                                            ? (!string.IsNullOrEmpty(item.LogoUrlNhaTuyenDung) ? item.LogoUrlNhaTuyenDung : defaultCompanyLogo)
                                            : (!string.IsNullOrEmpty(item.LogoUrlNhaTuyenDung) ? item.LogoUrlNhaTuyenDung : defaultAvatar);
                        
                        var ngayBaoCaoUtc = DateTime.SpecifyKind(item.NgayBaoCao, DateTimeKind.Utc);
                        DateTime? ngayXuLyCuaAdminUtc = item.NgayXuLyCuaAdmin.HasValue 
                                                        ? DateTime.SpecifyKind(item.NgayXuLyCuaAdmin.Value, DateTimeKind.Utc) 
                                                        : null;
                        DateTime? ngayHetHanTinTuyenDungUtc = item.NgayHetHanTinTuyenDung.HasValue
                                                        ? DateTime.SpecifyKind(item.NgayHetHanTinTuyenDung.Value, DateTimeKind.Utc)
                                                        : null;

                        <div class="list-group-item report-item-card shadow-sm"
                             data-report-id="@item.BaoCaoId">
                            <div class="card-body p-3">
                                <div class="row g-3 align-items-center">
                                    <!-- Logo Column -->
                                    <div class="col-auto d-none d-md-flex align-items-center justify-content-center" style="width: 80px;">
                                        <a asp-controller="TimViec" asp-action="ChiTiet" asp-route-id="@item.TinTuyenDungId" asp-route-tieuDeSeo="@SeoUrlHelper.GenerateSlug(item.TieuDeTinTuyenDung)" class="position-relative" title="Xem chi tiết: @item.TieuDeTinTuyenDung">
                                            <img src="@finalLogoUrl" alt="Logo @item.TenNhaTuyenDungHoacNguoiDang" class="img-fluid rounded-circle border p-1"
                                                 style="width: 65px; height: 65px; object-fit: cover; background-color: #f8f9fa;"
                                                 onerror="this.onerror=null; this.src='@(item.LoaiTkNguoiDang == LoaiTaiKhoan.doanhnghiep ? defaultCompanyLogo : defaultAvatar)';"
                                                 loading="lazy">
                                        </a>
                                    </div>

                                    <!-- Main Info Column -->
                                    <div class="col">
                                        <h5 class="fw-bold mb-1 report-job-title">
                                            <a asp-controller="TimViec" asp-action="ChiTiet" asp-route-id="@item.TinTuyenDungId" asp-route-tieuDeSeo="@SeoUrlHelper.GenerateSlug(item.TieuDeTinTuyenDung)">
                                                @item.TieuDeTinTuyenDung
                                            </a>
                                            @if(item.TinGapTinTuyenDung) {
                                                <span class="badge bg-danger-soft text-danger ms-1">Gấp</span>
                                            }
                                        </h5>
                                        
                                        <p class="mb-2 job-info-muted">
                                            <i class="fas fa-building fa-fw me-1 text-secondary"></i>@item.TenNhaTuyenDungHoacNguoiDang
                                        </p>

                                        <div class="d-flex flex-wrap gap-3 mb-2 job-meta-info small">
                                            <span title="Địa điểm: @item.DiaDiemTinTuyenDung"><i class="fas fa-map-marker-alt fa-fw text-danger me-1"></i>@item.DiaDiemTinTuyenDung</span>
                                            <span title="Mức lương: @item.MucLuongDisplayTinTuyenDung"><i class="fas fa-dollar-sign fa-fw text-success me-1"></i>@item.MucLuongDisplayTinTuyenDung</span>
                                            @if (!string.IsNullOrEmpty(item.LoaiHinhDisplayTinTuyenDung))
                                            {
                                                <span title="Loại hình: @item.LoaiHinhDisplayTinTuyenDung"><i class="fas fa-briefcase fa-fw text-primary me-1"></i>@item.LoaiHinhDisplayTinTuyenDung</span>
                                            }
                                            <span title="Hạn nộp tin: @(ngayHetHanTinTuyenDungUtc.HasValue ? ngayHetHanTinTuyenDungUtc.Value.ToLocalTime().ToString("dd/MM/yyyy") : "KGH")">
                                                <i class="far fa-calendar-times fa-fw me-1 @(ngayHetHanTinTuyenDungUtc.HasValue && ngayHetHanTinTuyenDungUtc.Value.Date < DateTime.UtcNow.Date ? "text-danger" : "")"></i> 
                                                @(ngayHetHanTinTuyenDungUtc.HasValue ? ngayHetHanTinTuyenDungUtc.Value.ToLocalTime().ToString("dd/MM/yyyy") : "KGH")
                                            </span>
                                        </div>

                                        @if (item.TagsTinTuyenDung.Any())
                                        {
                                            <div class="mb-2">
                                                @foreach (var tag in item.TagsTinTuyenDung) 
                                                { 
                                                    <span class="report-tag">@tag</span> 
                                                }
                                            </div>
                                        }
                                        
                                        <div class="report-reason-section mt-2">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <p class="mb-1"><strong>Lý do báo cáo:</strong> <span class="report-reason-text">@item.LyDoBaoCaoDisplay</span></p>
                                                <small class="text-muted report-time flex-shrink-0 ms-2" 
                                                       data-utc-date="@ngayBaoCaoUtc.ToString("o")" 
                                                       title="Gửi lúc: @ngayBaoCaoUtc.ToLocalTime().ToString("dd/MM/yyyy HH:mm")">
                                                    <i class="far fa-clock fa-fw"></i> <span class="timeago-placeholder">@TimeHelper.TimeAgo(ngayBaoCaoUtc)</span>
                                                </small>
                                            </div>
                                            @if (!string.IsNullOrWhiteSpace(item.ChiTietBaoCao))
                                            {
                                                <p class="report-detail-text mb-0">@item.ChiTietBaoCao</p>
                                            }
                                        </div>
                                        
                                        @if (!string.IsNullOrWhiteSpace(item.GhiChuAdmin))
                                        {
                                            <div class="admin-reply-section mt-2">
                                                <p class="small mb-1"><strong><i class="fas fa-user-shield me-1"></i> Phản hồi từ Admin:</strong></p>
                                                <p class="admin-message mb-0">@item.GhiChuAdmin</p>
                                                @if (ngayXuLyCuaAdminUtc.HasValue)
                                                {
                                                    <div class="d-flex justify-content-end">
                                                        <small class="text-muted report-time" 
                                                               data-utc-date="@ngayXuLyCuaAdminUtc.Value.ToString("o")"
                                                               title="Lúc: @ngayXuLyCuaAdminUtc.Value.ToLocalTime().ToString("dd/MM/yyyy HH:mm")">
                                                            <i class="far fa-clock fa-fw"></i> <span class="timeago-placeholder">@TimeHelper.TimeAgo(ngayXuLyCuaAdminUtc.Value)</span>
                                                        </small>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else if(item.TrangThaiXuLy == TrangThaiXuLyBaoCao.daxemxet || (item.TrangThaiXuLy == TrangThaiXuLyBaoCao.moi && string.IsNullOrWhiteSpace(item.GhiChuAdmin)))
                                        {
                                            <div class="alert alert-info py-1 px-2 mt-2 mb-0 small">
                                                <i class="fas fa-info-circle me-1"></i> Báo cáo của bạn đang chờ Admin xem xét.
                                            </div>
                                        }
                                    </div>

                                    <!-- Action Column -->
                                    <div class="col-12 col-md-auto d-flex flex-column align-items-center align-items-md-end justify-content-start mt-2 mt-md-0 pt-2 pt-md-0 border-top border-md-top-0 border-md-start action-buttons-col">
                                        <span class="badge rounded-pill status-badge @item.TrangThaiXuLyBadgeClass mb-md-3" title="Trạng thái: @item.TrangThaiXuLyDisplay">
                                            @item.TrangThaiXuLyDisplay
                                        </span>
                                        <div class="d-grid gap-2 w-100 mt-2 mt-md-0">
                                             <a asp-controller="BaoCao" asp-action="Details" asp-route-id="@item.BaoCaoId"class="btn btn-sm btn-outline-primary"> Chi tiết</a>
                                            @if (item.CanDelete)
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-danger btn-delete-report" data-id="@item.BaoCaoId" title="Xóa báo cáo này (chỉ khi trạng thái 'Mới')">
                                                    <i class="fas fa-trash-alt fa-fw"></i> <span class="d-none d-lg-inline">Xóa</span>
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                
                <!-- Pagination -->
                @if (Model.BaoCaos.TotalPages > 1)
                {
                    <div class="pagination-container mt-4">
                        <nav aria-label="Page navigation" class="d-flex justify-content-center">
                            <ul class="pagination pagination-sm pagination-report-custom flex-wrap">
                                @{
                                    // --- CHỈNH SỬA HELPER PHÂN TRANG ---
                                    Func<int, Dictionary<string, string?>> GetRouteValuesForPage = (pageNum) =>
                                    {
                                        var routeValues = new Dictionary<string, string?>();
                                        if (!string.IsNullOrWhiteSpace(Model.tuKhoa))
                                        {
                                            routeValues["tuKhoa"] = Model.tuKhoa;
                                        }
                                        if (Model.trangThai.HasValue)
                                        {
                                            routeValues["trangThai"] = Model.trangThai.Value.ToString();
                                        }
                                        // Thêm pageSize vào route, chỉ khi nó khác giá trị mặc định (10) để giữ URL gọn gàng
                                        if (Model.pageSize != 10)
                                        {
                                            routeValues["pageSize"] = Model.pageSize.ToString();
                                        }
                                        if (pageNum > 1) // Chỉ thêm page khi không phải trang đầu
                                        {
                                            routeValues["page"] = pageNum.ToString();
                                        }
                                        return routeValues;
                                    };
                                }

                                <!-- First Page Link -->
                                <li class="page-item @(!Model.BaoCaos.HasPreviousPage ? "disabled" : "")">
                                    <a class="page-link" asp-all-route-data="GetRouteValuesForPage(1)" asp-action="Index" aria-label="First"><i class="fas fa-angle-double-left"></i></a>
                                </li>
                                <!-- Previous Page -->
                                <li class="page-item @(!Model.BaoCaos.HasPreviousPage ? "disabled" : "")">
                                    <a class="page-link" asp-all-route-data="GetRouteValuesForPage(Model.BaoCaos.PageIndex - 1)" asp-action="Index" aria-label="Previous"><i class="fas fa-angle-left"></i></a>
                                </li>

                                <!-- Page Numbers -->
                                @{
                                    int currentPage = Model.BaoCaos.PageIndex;
                                    int totalPages = Model.BaoCaos.TotalPages;
                                    int startPage = Math.Max(1, currentPage - 1);
                                    int endPage = Math.Min(totalPages, currentPage + 1);

                                    if (totalPages <= 3) { startPage = 1; endPage = totalPages; }
                                    else
                                    {
                                        if (currentPage <= 2) { startPage = 1; endPage = 3; }
                                        else if (currentPage >= totalPages - 1) { startPage = totalPages - 2; endPage = totalPages; }
                                    }

                                    if (startPage > 1)
                                    {
                                        <li class="page-item"><a class="page-link" asp-all-route-data="GetRouteValuesForPage(1)" asp-action="Index">1</a></li>
                                        if (startPage > 2)
                                        {
                                            <li class="page-item disabled"><span class="page-link">...</span></li>
                                        }
                                    }

                                    for (int i = startPage; i <= endPage; i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" asp-all-route-data="GetRouteValuesForPage(i)" asp-action="Index">@i</a>
                                        </li>
                                    }

                                    if (endPage < totalPages)
                                    {
                                        if (endPage < totalPages - 1)
                                        {
                                            <li class="page-item disabled"><span class="page-link">...</span></li>
                                        }
                                        <li class="page-item"><a class="page-link" asp-all-route-data="GetRouteValuesForPage(totalPages)" asp-action="Index">@totalPages</a></li>
                                    }
                                }
                                <!-- Next Page -->
                                <li class="page-item @(!Model.BaoCaos.HasNextPage ? "disabled" : "")">
                                    <a class="page-link" asp-all-route-data="GetRouteValuesForPage(Model.BaoCaos.PageIndex + 1)" asp-action="Index" aria-label="Next"><i class="fas fa-angle-right"></i></a>
                                </li>
                                <!-- Last Page Link -->
                                <li class="page-item @(!Model.BaoCaos.HasNextPage ? "disabled" : "")">
                                     <a class="page-link" asp-all-route-data="GetRouteValuesForPage(Model.BaoCaos.TotalPages)" asp-action="Index" aria-label="Last"><i class="fas fa-angle-double-right"></i></a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                }
            </div>
        }
        else
        {
            <div id="emptyReportState" class="empty-state-report">
                <div class="icon"> <i class="far fa-folder-open fa-3x"></i> </div>
                <div class="message">
                     @if (!string.IsNullOrWhiteSpace(Model.tuKhoa) || Model.trangThai.HasValue)
                     {
                        <p class="lead">Không tìm thấy báo cáo nào khớp với bộ lọc của bạn.</p>
                        <p class="text-muted">Hãy thử thay đổi các tiêu chí lọc.</p>
                        @* ĐÃ SỬA: Bỏ khối @{} không cần thiết và tạo link reset đúng cách *@
                        <a asp-action="Index" asp-controller="BaoCao" class="btn btn-outline-primary mt-3">
                            <i class="fas fa-sync-alt me-2"></i> Đặt lại bộ lọc
                        </a>
                     }
                    else
                    {
                        <p class="lead">Bạn chưa gửi báo cáo nào.</p>
                        <p class="text-muted">Nếu phát hiện tin tuyển dụng vi phạm, hãy báo cáo để chúng tôi xử lý.</p>
                        <a asp-controller="TimViec" asp-action="Index" class="btn btn-primary mt-3"> <i class="fas fa-search me-2"></i> Tìm việc ngay </a>
                    }
                </div>
            </div>
        }
    </div> <!-- Closing app-container-report -->
</div> <!-- Closing container py-4 -->

@section Scripts {
<script>
        function timeAgoSimple(utcDateString) {
            if (!utcDateString) return 'N/A';
            try {
                const date = new Date(utcDateString);
                if (isNaN(date.getTime())) return 'Ngày không hợp lệ';

                const now = new Date();
                const seconds = Math.round(Math.abs(now - date) / 1000);

                const intervals = {
                    năm: 31536000, tháng: 2592000, tuần: 604800, ngày: 86400,
                    giờ: 3600, phút: 60, giây: 1
                };
                let counter;
                if (seconds < 5) return 'vài giây trước';
                if (seconds < intervals.phút) return Math.floor(seconds) + ' giây trước';
                if (seconds < intervals.giờ) { counter = Math.floor(seconds / intervals.phút); return counter + ' phút trước'; }
                if (seconds < intervals.ngày) { counter = Math.floor(seconds / intervals.giờ); return counter + ' giờ trước'; }
                if (seconds < intervals.tuần) { counter = Math.floor(seconds / intervals.ngày); return counter + ' ngày trước'; }
                if (seconds < intervals.tháng) { counter = Math.floor(seconds / intervals.tuần); return counter + ' tuần trước'; }
                if (seconds < intervals.năm) { counter = Math.floor(seconds / intervals.tháng); return counter + ' tháng trước'; }
                counter = Math.floor(seconds / intervals.năm); return counter + ' năm trước';
            } catch (e) {
                console.error("Lỗi timeAgoSimple:", e, " với đầu vào:", utcDateString);
                return 'N/A';
            }
        }

        function updateAllTimeAgoPlaceholdersClient() {
            $('.timeago-placeholder').each(function() {
                const parentEl = $(this).closest('[data-utc-date]');
                const utcDateString = parentEl.data('utc-date');
                if (utcDateString) {
                    $(this).text(timeAgoSimple(utcDateString));
                }
            });
        }

        $(function () {
            const csrfToken = '@requestToken';
            const reportListContainer = $('#reportListContainer');

            updateAllTimeAgoPlaceholdersClient();

            reportListContainer.on('click', '.btn-delete-report', function () {
                const button = $(this);
                const baoCaoId = button.data('id');

                if (!baoCaoId || isNaN(parseInt(baoCaoId)) || parseInt(baoCaoId) <= 0) {
                    // Dùng Swal cho thông báo lỗi nếu có
                    if (typeof Swal !== 'undefined') {
                        Swal.fire('Lỗi', 'ID báo cáo không hợp lệ.', 'error');
                    } else {
                        alert('ID báo cáo không hợp lệ.');
                    }
                    return;
                }

                const swalConfig = {
                    title: 'Xác nhận xóa?',
                    html: "Bạn chắc chắn muốn xóa báo cáo này? <br><small class='text-muted'>(Hành động này không thể hoàn tác)</small>",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Vâng, xóa nó!',
                    cancelButtonText: 'Hủy bỏ',
                    // Thêm animation cho đẹp mắt
                    showClass: {
                        popup: 'animate__animated animate__fadeInDown'
                    },
                    hideClass: {
                        popup: 'animate__animated animate__fadeOutUp'
                    }
                };

                // Bây giờ `typeof Swal` sẽ không còn là `undefined` nữa
                if (typeof Swal !== 'undefined') {
                     Swal.fire(swalConfig).then((result) => {
                        if (result.isConfirmed) {
                            sendDeleteRequest(button, baoCaoId, csrfToken);
                        }
                    });
                } else {
                    // Fallback nếu CDN lỗi
                    if (confirm("Bạn chắc chắn muốn xóa báo cáo này? (Chỉ thực hiện được khi báo cáo còn ở trạng thái 'Mới')")) {
                         sendDeleteRequest(button, baoCaoId, csrfToken);
                    }
                }
            });

            function sendDeleteRequest(button, baoCaoId, token) {
                const originalButtonHtml = button.html();
                const originalButtonDisabled = button.is(':disabled');
                button.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang xóa...');

                $.ajax({
                    url: '@Url.Action("XoaBaoCao", "BaoCao")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(baoCaoId),
                    headers: { 'RequestVerificationToken': token },
                    success: function (response) {
                        if (response && response.success) {
                            // Dùng Swal cho thông báo thành công
                             Swal.fire({
                                title: 'Đã xóa!',
                                text: response.message || "Báo cáo của bạn đã được xóa.",
                                icon: 'success',
                                timer: 1500, // Tự động đóng sau 1.5 giây
                                showConfirmButton: false
                            }).then(() => {
                                location.reload(); // Tải lại trang sau khi thông báo đóng
                            });
                        } else {
                             Swal.fire('Lỗi', (response ? response.message : "Xóa báo cáo không thành công."), 'error');
                             button.prop('disabled', originalButtonDisabled).html(originalButtonHtml);
                        }
                    },
                    error: function (jqXHR) {
                        let errorMsg = "Đã xảy ra lỗi kết nối hoặc lỗi máy chủ.";
                        if (jqXHR.responseJSON && jqXHR.responseJSON.message) { errorMsg = jqXHR.responseJSON.message; }
                        else if (jqXHR.status === 400) { errorMsg = "Yêu cầu không hợp lệ hoặc báo cáo không thể xóa."; }
                        else if (jqXHR.status === 404) { errorMsg = "Không tìm thấy báo cáo để xóa."; }

                        Swal.fire('Lỗi!', errorMsg, 'error');
                        button.prop('disabled', originalButtonDisabled).html(originalButtonHtml);
                    }
                });
            }
        });
    </script>

}