@model HeThongTimViec.ViewModels.BaoCaoThongKeViewModel

<style>
    /* CSS được di chuyển vào đây để dễ quản lý và không ảnh hưởng đến các partial khác */
    body {
        /* NỀN TRẮNG NHƯ YÊU CẦU */
        background-color: #f8f9fa !important;
    }
    .page-title {
        text-align: center;
        color: #343a40; /* Đổi màu chữ tiêu đề cho nền trắng */
        margin-bottom: 2rem;
        font-size: 2.5rem;
        font-weight: 700;
        text-shadow: none; /* Bỏ text-shadow trên nền trắng */
        animation: fadeInDown 1s ease-out;
    }
    
    .stat-card {
        background: linear-gradient(145deg, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.7));
        backdrop-filter: blur(5px);
        border: 1px solid rgba(0, 0, 0, 0.05);
        border-radius: 20px;
        padding: 2rem;
        text-align: center;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        position: relative;
        overflow: hidden;
        min-height: 140px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
    }
    
    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.2), transparent);
        transition: left 0.5s;
    }
    
    .stat-card:hover::before {
        left: 100%;
    }
    
    .stat-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }
    
    .stat-card.danger {
        background: linear-gradient(145deg, #ff6b6b, #ee5a24);
        color: white;
    }
    
    .stat-card.info {
        background: linear-gradient(145deg, #4ecdc4, #0084ff);
        color: white;
    }
    
    .stat-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
        opacity: 0.9;
        animation: float 3s ease-in-out infinite;
        text-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
    }
    
    @@keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-10px); }
    }
    
    .stat-title {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }
    
    .stat-card.danger .stat-title,
    .stat-card.info .stat-title {
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }
    
    .stat-value {
        font-size: 0.9rem;
        opacity: 0.9;
        font-weight: 500;
    }

    .stat-card:not(.danger):not(.info) .stat-title,
    .stat-card:not(.danger):not(.info) .stat-value {
         color: #495057;
    }
    
    .chart-card {
        background: white;
        border: none;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.07);
        transition: all 0.3s ease;
        overflow: hidden;
    }
    
    .chart-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
    }
    
    .card-header {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
        padding: 1.5rem;
        border-radius: 20px 20px 0 0 !important;
    }
    
    .card-header h6 {
        margin: 0;
        font-size: 1.2rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .card-body {
        padding: 2rem;
    }
    
    .table-responsive {
        max-height: 300px; /* Giới hạn chiều cao cho bảng */
    }

    .table {
        background: transparent;
        border-radius: 15px;
        overflow: hidden;
    }
    
    .table thead th {
        background: linear-gradient(135deg, #f3f4f6, #e5e7eb);
        color: #374151;
        border: none;
        padding: 1rem;
        font-weight: 600;
    }
    
    .table tbody tr {
        transition: all 0.2s ease;
        border: none;
    }
    
    .table tbody tr:hover {
        background: rgba(102, 126, 234, 0.05);
        transform: scale(1.01);
    }
    
    .table tbody td {
        padding: 1rem;
        border: none;
        border-bottom: 1px solid #e5e7eb;
        vertical-align: middle;
    }
    
    .chart-container {
        position: relative;
        /* SỬA LỖI XUẤT PDF: Đặt chiều cao tối thiểu cho container */
        min-height: 350px; 
        padding: 1rem;
    }
    
    .chart-container#popular-industries-container {
        /* Đặt chiều cao cụ thể hơn cho biểu đồ ngang để đảm bảo nó hiển thị đủ */
        min-height: 400px;
    }

    canvas {
        max-height: 400px;
    }
    
    .loading-spinner {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        color: #667eea;
        display: none; /* Mặc định ẩn, sẽ được JS điều khiển */
    }
    
    .animate-on-scroll {
        opacity: 0;
        transform: translateY(30px);
        transition: all 0.6s ease-out;
    }
    
    .animate-on-scroll.animated {
        opacity: 1;
        transform: translateY(0);
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6 col-lg-3 mb-4">
            <div class="stat-card danger animate-on-scroll">
                <div class="stat-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <div class="stat-title">Tin bị ẩn do vi phạm</div>
                <div class="stat-value">@Model.SoTinTuyenDungBiAnDoViPham.ToString("N0") tin</div>
            </div>
        </div>
        <div class="col-md-6 col-lg-3 mb-4">
            <div class="stat-card info animate-on-scroll">
                <div class="stat-icon">
                    <i class="fas fa-fire"></i>
                </div>
                <div class="stat-title">Ngành nghề "hot" nhất</div>
                <div class="stat-value">@Model.NganhNgheHotNhat.Key (@Model.NganhNgheHotNhat.Value.ToString("N0") tin)</div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-4 mb-4">
            <div class="chart-card animate-on-scroll">
                <div class="card-header">
                    <h6><i class="fas fa-pie-chart"></i> Phân bố loại hình công việc</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="jobTypeDistributionChart"></canvas>
                        <div class="loading-spinner"><i class="fas fa-spinner fa-spin fa-2x"></i></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4 mb-4">
            <div class="chart-card animate-on-scroll">
                <div class="card-header">
                    <h6><i class="fas fa-users"></i> Phân loại người đăng</h6>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="posterTypeChart"></canvas>
                        <div class="loading-spinner"><i class="fas fa-spinner fa-spin fa-2x"></i></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4 mb-4">
            <div class="chart-card animate-on-scroll">
                <div class="card-header">
                    <h6><i class="fas fa-trophy"></i> Top 5 NTD đăng nhiều tin nhất</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-building me-2"></i>Tên công ty</th>
                                    <th class="text-end"><i class="fas fa-hashtag me-2"></i>Số tin</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Top5NhaTuyenDungDangNhieuTinNhat)
                                {
                                    <tr>
                                        <td>@item.TenCongTy</td>
                                        <td class="text-end">
                                            <span class="badge bg-primary rounded-pill fs-6">
                                                @item.SoLuongTinDang.ToString("N0")
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12 mb-4">
            <div class="chart-card animate-on-scroll">
                <div class="card-header">
                    <h6><i class="fas fa-chart-bar"></i> Ngành nghề phổ biến (Top 7)</h6>
                </div>
                <div class="card-body">
                    <!-- SỬA LỖI XUẤT PDF: Đặt ID cho container của biểu đồ này -->
                    <div class="chart-container" id="popular-industries-container">
                        <canvas id="popularIndustriesChart"></canvas>
                        <div class="loading-spinner"><i class="fas fa-spinner fa-spin fa-2x"></i></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* Script này sẽ được gọi bởi file Index.cshtml chính *@
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Hàm này sẽ được gọi từ script chính trong Index.cshtml
        // nên không cần lặp lại ở đây.
        // Chỉ cần đảm bảo các ID của canvas là duy nhất và chính xác.
        
        function animateOnScroll() {
            const elements = document.querySelectorAll('.animate-on-scroll');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animated');
                    }
                });
            }, {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            });

            elements.forEach(element => {
                observer.observe(element);
            });
        }
        
        animateOnScroll();
    });
</script>