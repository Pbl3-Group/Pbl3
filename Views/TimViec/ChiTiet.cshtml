@* File: Views/TimViec/ChiTiet.cshtml *@
@model HeThongTimViec.ViewModels.TimViec.ChiTietTinTuyenDungViewModel
@using HeThongTimViec.Models
@using HeThongTimViec.Extensions
@using HeThongTimViec.Utils
@* // Không cần using HeThongTimViec.ViewModels.BaoCao ở đây nữa vì form modal không dùng asp-for cho GuiBaoCaoViewModel *@
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery antiforgery
@using System.Security.Claims;
@using System.Net;
@{
    ViewData["Title"] = $"Việc làm: {Model.TieuDe} tại {Model.TenNguoiDangHoacCongTy} | JobFlex";
    var requestToken = antiforgery.GetAndStoreTokens(Context).RequestToken;
    var userIsAuthenticated = User.Identity?.IsAuthenticated ?? false;
    var returnUrl = Context.Request.Path + Context.Request.QueryString;

    var defaultCompanyLogo = "/images/default-company.png";
    var defaultAvatar = "/images/default-avatar.png";
    var finalLogoUrlNhaTuyenDung = Model.LoaiTaiKhoanNguoiDang == LoaiTaiKhoan.doanhnghiep
                        ? (!string.IsNullOrEmpty(Model.LogoHoacAvatarUrl) ? Model.LogoHoacAvatarUrl : defaultCompanyLogo)
                        : (!string.IsNullOrEmpty(Model.LogoHoacAvatarUrl) ? Model.LogoHoacAvatarUrl : defaultAvatar);

    var currentUserAccountTypeString = User.FindFirstValue("AccountType") ?? User.FindFirstValue(ClaimTypes.Role);
  bool canApply = userIsAuthenticated;
    bool isUngVienRole = true;
    _ = isUngVienRole; // Suppress unused variable warning

    if (userIsAuthenticated) // Rút gọn, chỉ cần kiểm tra đăng nhập một lần
    {
        // >>> THÊM VÀO ĐÂY: Kiểm tra xem có phải người đăng tin không
        if (Model.IsCurrentUserThePoster)
        {
            canApply = false;
        }
        else if (!string.IsNullOrEmpty(currentUserAccountTypeString))
        {
            if (Enum.TryParse<LoaiTaiKhoan>(currentUserAccountTypeString, true, out var accountType))
            {
                if (accountType == LoaiTaiKhoan.doanhnghiep || accountType == LoaiTaiKhoan.quantrivien)
                {
                    canApply = false;
                    isUngVienRole = false; 
                }
            }
            else if (User.IsInRole("DoanhNghiep") || User.IsInRole("QuanTriVien")) // Fallback to Role if AccountType claim is not present
            {
                canApply = false;
                isUngVienRole = false;
            }
        }
    }
    else if (!userIsAuthenticated) // Nếu chưa đăng nhập
    {
        isUngVienRole = false; 
        // canApply đã là false do khởi tạo từ userIsAuthenticated
    }
     else if (!userIsAuthenticated) // Nếu chưa đăng nhập, cũng không phải là ứng viên (theo nghĩa đã định danh)
    {
        isUngVienRole = false; 
    }
}
<link rel="stylesheet" href="~/css/chitiet-timviec.css" asp-append-version="true" />

<div class="container mt-4 mb-5 animate__animated animate__fadeIn">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="job-detail-breadcrumb mb-4">
        <ol class="breadcrumb small bg-light p-2 rounded shadow-sm">
            <li class="breadcrumb-item"><a asp-action="Index" asp-controller="TimViec" class="text-decoration-none">Tìm việc</a></li>
            <li class="breadcrumb-item">
                <a asp-action="ChiTiet" asp-controller="TimViec" asp-route-id="@Model.Id" asp-route-tieuDeSeo="@SeoUrlHelper.GenerateSlug(Model.TieuDe)" class="text-decoration-none">
                    @Model.TieuDe.Substring(0, Math.Min(Model.TieuDe.Length, 40))@if(Model.TieuDe.Length > 40){<span>...</span>}
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Chi tiết</li>
        </ol>
    </nav>

    <div class="row g-4">
        <!-- Cột nội dung chính (Thông tin việc làm) -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm job-detail-card">
                <div class="card-header bg-primary text-white p-3 rounded-top job-detail-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h1 class="h4 mb-0 text-white job-title-detail">@Model.TieuDe</h1>
                        @if (Model.TinGap)
                        {
                            <span class="badge bg-danger-soft text-danger rounded-pill px-2 py-1 urgent-badge"><i class="fas fa-fire me-1"></i>GẤP</span>
                        }
                    </div>
                </div>

                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-2 salary-actions-bar">
                        <div class="text-success fw-bold fs-5 salary-display">
    <i class="fas fa-money-bill-wave me-1"></i>@Model.MucLuongDisplay
    <small class="text-muted fw-normal ms-1 job-salary-type">(@Model.LoaiLuongDisplay)</small>
</div>
                        <div class="job-actions-detail d-flex gap-2 flex-wrap">
                            @if (userIsAuthenticated)
                            {
                                if (Model.DaLuu)
                                {
                                    <button id="btnSaveToggleDetail" class="btn btn-sm btn-success btn-icon btn-unsave-job" data-id="@Model.Id" title="Bỏ lưu tin này">
                                        <i class="fas fa-heart fa-fw"></i><span class="button-text-js d-none d-sm-inline ms-1">Đã lưu</span>
                                    </button>
                                }
                                else
                                {
                                    <button id="btnSaveToggleDetail" class="btn btn-sm btn-outline-success btn-icon btn-save-job" data-id="@Model.Id" title="Lưu tin này">
                                        <i class="far fa-heart fa-fw"></i><span class="button-text-js d-none d-sm-inline ms-1">Lưu tin</span>
                                    </button>
                                }

                                @if (canApply)
                                {
                                    if (Model.DaUngTuyen)
                                    {
                                         <button type="button" class="btn btn-sm btn-secondary btn-icon" disabled>
                                            <i class="fas fa-check-circle fa-fw"></i><span class="d-none d-sm-inline ms-1">Đã ứng tuyển</span>
                                        </button>
                                    }
                                    else
                                    {
                                        <a asp-controller="UngTuyen" asp-action="NopHoSo" asp-route-id="@Model.Id" class="btn btn-sm btn-primary btn-icon btn-apply-now-nav">
                                            <i class="fas fa-paper-plane fa-fw"></i><span class="d-none d-sm-inline ms-1">Ứng tuyển</span>
                                        </a>
                                    }
                                }
                                
                                <!-- NÚT BÁO CÁO KHI ĐÃ ĐĂNG NHẬP -->
                                @if (Model.DaBaoCao)
                                {
                                     <button type="button" class="btn btn-sm btn-secondary btn-icon" id="btnOpenReportModalDetail" disabled title="Bạn đã báo cáo tin này">
                                        <i class="fas fa-check-circle fa-fw"></i><span class="d-none d-sm-inline ms-1">Đã báo cáo</span>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-sm btn-outline-danger btn-icon" id="btnOpenReportModalDetail" data-bs-toggle="modal" data-bs-target="#reportJobModalDetail" title="Báo cáo tin này">
                                        <i class="fas fa-flag fa-fw"></i><span class="d-none d-sm-inline ms-1">Báo cáo</span>
                                    </button>
                                }
                            }
                            else // Chưa đăng nhập
                            {
                                <a asp-controller="TaiKhoan" asp-action="DangNhap" asp-route-returnUrl="@returnUrl" class="btn btn-sm btn-outline-secondary btn-icon" title="Đăng nhập để lưu tin">
                                    <i class="far fa-heart fa-fw"></i><span class="button-text-js d-none d-sm-inline ms-1">Lưu tin</span>
                                </a>
                                <a asp-controller="TaiKhoan" asp-action="DangNhap" asp-route-returnUrl="@Url.Action("NopHoSo", "UngTuyen", new { id = Model.Id })" class="btn btn-sm btn-primary btn-icon btn-apply-now-nav">
                                    <i class="fas fa-paper-plane fa-fw"></i><span class="d-none d-sm-inline ms-1">Ứng tuyển</span>
                                </a>
                                <a asp-controller="TaiKhoan" asp-action="DangNhap" asp-route-returnUrl="@returnUrl" class="btn btn-sm btn-outline-danger btn-icon" title="Đăng nhập để báo cáo tin này">
                                    <i class="fas fa-flag fa-fw"></i><span class="d-none d-sm-inline ms-1">Báo cáo</span>
                                </a>
                            }
                        </div>
                    </div>

                    <!-- Thông tin chung -->
                     <div class="bg-light p-3 rounded mb-4 job-info-section">
                        <h5 class="fw-semibold mb-3 border-bottom pb-2 section-title">Thông tin chung</h5>
                        <div class="row g-3">
                            <div class="col-md-6"><div class="d-flex"><i class="fas fa-map-marker-alt fa-fw text-danger mt-1 me-2"></i><div><strong>Địa điểm:</strong><br>@Model.DiaChiLamViecDayDu</div></div></div>
                            <div class="col-md-6"><div class="d-flex"><i class="fas fa-briefcase fa-fw text-primary mt-1 me-2"></i><div><strong>Loại hình:</strong><br>@Model.LoaiHinhCongViecDisplay</div></div></div>
                            <div class="col-md-6"><div class="d-flex"><i class="fas fa-users fa-fw text-info mt-1 me-2"></i><div><strong>Số lượng tuyển:</strong><br>@Model.SoLuongTuyen @(Model.SoLuongTuyen > 1 ? "người" : "người")</div></div></div>
                            <div class="col-md-6"><div class="d-flex"><i class="fas fa-medal fa-fw text-warning mt-1 me-2"></i><div><strong>Kinh nghiệm:</strong><br>@(string.IsNullOrWhiteSpace(Model.YeuCauKinhNghiemText) ? "Không yêu cầu" : Model.YeuCauKinhNghiemText)</div></div></div>
                            <div class="col-md-6"><div class="d-flex"><i class="fas fa-graduation-cap fa-fw text-success mt-1 me-2"></i><div><strong>Bằng cấp:</strong><br>@(string.IsNullOrWhiteSpace(Model.YeuCauHocVanText) ? "Không yêu cầu" : Model.YeuCauHocVanText)</div></div></div>
                            @if (Model.NganhNghes.Any())
                            {
                                <div class="col-md-6"><div class="d-flex"><i class="fas fa-tags fa-fw text-secondary mt-1 me-2"></i><div><strong>Ngành nghề:</strong><br>@string.Join(", ", Model.NganhNghes)</div></div></div>
                            }
                        </div>
                    </div>
                    
                    @if (!string.IsNullOrWhiteSpace(Model.MoTa))
                    {
                        <div class="mb-4 content-section">
                            <h5 class="fw-semibold border-bottom pb-2 mb-3 section-title">Mô tả công việc</h5>
                            <div class="job-description content-expandable formatted-content">@Html.Raw(Model.MoTa)</div>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.YeuCau))
                    {
                        <div class="mb-4 content-section">
                            <h5 class="fw-semibold border-bottom pb-2 mb-3 section-title">Yêu cầu ứng viên</h5>
                            <div class="job-requirements content-expandable formatted-content">@Html.Raw(Model.YeuCau)</div>
                        </div>
                    }
                     @if (!string.IsNullOrWhiteSpace(Model.QuyenLoi))
                    {
                        <div class="mb-4 content-section">
                            <h5 class="fw-semibold border-bottom pb-2 mb-3 section-title">Quyền lợi được hưởng</h5>
                            <div class="job-benefits content-expandable formatted-content">@Html.Raw(Model.QuyenLoi)</div>
                        </div>
                    }

                    @if (Model.LichLamViecs.Any())
                    {
                        <div class="mb-4 content-section">
                            <h5 class="fw-semibold border-bottom pb-2 mb-3 section-title">Lịch làm việc</h5>
                            <ul class="list-unstyled work-schedule-list">
                                @foreach (var lich in Model.LichLamViecs)
                                {
                                    <li class="mb-2">
                                        <div class="d-flex align-items-center">
                                            <i class="far fa-clock fa-fw me-2 text-info"></i>
                                            <span>
                                                @lich.NgayTrongTuanDisplay:
                                                <span class="fw-semibold">
                                                    @lich.ThoiGianDisplay
                                                </span>
                                            </span>
                                        </div>
                                    </li>
                                }
                            </ul>
                        </div>
                    }

                     <div class="d-flex justify-content-between flex-wrap border-top pt-3 mt-4 text-muted small post-expiry-info">
                        <div class="mb-2" title="Đăng vào lúc @TimeHelper.FormatDateTime(Model.NgayDang, "dd/MM/yyyy HH:mm:ss")">
                            <i class="far fa-calendar-check me-1 text-primary"></i>Ngày đăng: @TimeHelper.TimeAgo(TimeHelper.ConvertToVietnamTimeFromUtc(Model.NgayDang))
                        </div>
                        @if (Model.NgayHetHan.HasValue)
                        {
                            <div class="mb-2">
                                <i class="far fa-calendar-times me-1 text-danger"></i>Hạn nộp hồ sơ: @TimeHelper.FormatDate(Model.NgayHetHan)
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Khu vực Ứng tuyển -->
             @if (canApply || !userIsAuthenticated)
            {
            <div class="card border-0 shadow-sm mt-4" id="ungtuyen-section">
                <div class="card-header bg-light">
                    <h4 class="mb-0 text-primary section-title"><i class="fas fa-paper-plane me-2"></i>Ứng tuyển vị trí này</h4>
                </div>
                <div class="card-body p-4">
                    @if (userIsAuthenticated && canApply)
                    {
                        @if (Model.DaUngTuyen)
                        {
                             <div class="alert alert-success text-center" role="alert">
                                <i class="fas fa-check-circle fa-2x mb-2 d-block text-success"></i>
                                Bạn đã ứng tuyển vào vị trí này. Nhà tuyển dụng sẽ sớm liên hệ với bạn nếu hồ sơ phù hợp.
                            </div>
                        }
                        else
                        {
                            <div class="text-center">
                                <p class="text-muted mb-4">Sẵn sàng cho cơ hội mới? Nhấn nút bên dưới để bắt đầu quá trình ứng tuyển!</p>
                                <a asp-controller="UngTuyen" asp-action="NopHoSo" asp-route-id="@Model.Id" class="btn btn-primary btn-lg btn-apply-job">
                                    <i class="fas fa-file-alt me-2"></i>Nộp hồ sơ ngay
                                </a>
                            </div>
                        }
                    }
                    else if (!userIsAuthenticated)
                    {
                        <div class="text-center">
                            <p class="text-danger mb-3">Vui lòng đăng nhập để ứng tuyển vào vị trí này.</p>
                            <a asp-controller="TaiKhoan" asp-action="DangNhap" asp-route-returnUrl="@Url.Action("NopHoSo", "UngTuyen", new { id = Model.Id })" class="btn btn-warning btn-lg">
                                <i class="fas fa-sign-in-alt me-2"></i>Đăng nhập ngay
                            </a>
                        </div>
                    }
                    else if (userIsAuthenticated && !canApply)
                    {
                         <div class="alert alert-info text-center" role="alert">
                            <i class="fas fa-info-circle me-2"></i>
                            Tài khoản của bạn không thuộc loại ứng viên để có thể ứng tuyển.
                        </div>
                    }
                </div>
            </div>
            }
        </div>

        <!-- Cột thông tin nhà tuyển dụng (Sidebar) -->
        <div class="col-lg-4">
            <div class="sticky-top" style="top: 75px; z-index: 100;">
                <div class="card border-0 shadow-sm mb-4 recruiter-card">
                    <div class="card-header bg-light p-3">
                        <h5 class="mb-0 section-title">
                            <i class="fas @(Model.LoaiTaiKhoanNguoiDang == LoaiTaiKhoan.doanhnghiep ? "fa-building" : "fa-user-tie") me-2 text-primary"></i>
                            Thông tin @(Model.LoaiTaiKhoanNguoiDang == LoaiTaiKhoan.doanhnghiep ? "Nhà tuyển dụng" : "Người đăng")
                        </h5>
                    </div>
                    <div class="card-body text-center p-4">
                        <img src="@finalLogoUrlNhaTuyenDung"
                             alt="Logo/Avatar @Model.TenNguoiDangHoacCongTy"
                             class="img-thumbnail rounded-circle mb-3 shadow-sm recruiter-logo-avatar"
                             style="width: 80px; height: 80px; object-fit: cover;"
                             onerror="this.onerror=null; this.src='@(Model.LoaiTaiKhoanNguoiDang == LoaiTaiKhoan.doanhnghiep ? defaultCompanyLogo : defaultAvatar)';">

                        <h5 class="card-title mb-2 recruiter-name"> @Model.TenNguoiDangHoacCongTy </h5>

                        @if (Model.LoaiTaiKhoanNguoiDang == LoaiTaiKhoan.doanhnghiep && Model.CongTyDaXacMinh)
                        {
                            <div class="mb-2"> <span class="badge bg-success-soft text-success"><i class="fas fa-check-circle me-1"></i>Đã xác minh</span> </div>
                        }
                        
                        <div class="recruiter-contact-info small text-muted text-start mt-3">
                            @if (!string.IsNullOrEmpty(Model.EmailLienHe))
                            { <p class="mb-1"><i class="fas fa-envelope fa-fw me-2 text-secondary"></i> @Model.EmailLienHe</p> }
                            @if (!string.IsNullOrEmpty(Model.SdtLienHe))
                            { <p class="mb-1"><i class="fas fa-phone-alt fa-fw me-2 text-secondary"></i> @Model.SdtLienHe</p> }
                            @if (!string.IsNullOrEmpty(Model.DiaChiLienHeNguoiDang))
                            { <p class="mb-0"><i class="fas fa-map-marker-alt fa-fw me-2 text-secondary"></i> @Model.DiaChiLienHeNguoiDang</p> }
                        </div>

                        @if (Model.LoaiTaiKhoanNguoiDang == LoaiTaiKhoan.doanhnghiep && !string.IsNullOrEmpty(Model.UrlWebsiteCongTy))
                        {
                            <div class="mt-3 d-grid">
                                <a href="@(Model.UrlWebsiteCongTy.StartsWith("http") ? Model.UrlWebsiteCongTy : "http://" + Model.UrlWebsiteCongTy)" target="_blank" rel="noopener noreferrer" class="btn btn-sm btn-outline-primary">
                                    <i class="fas fa-globe me-1"></i>Xem Website Công Ty
                                </a>
                            </div>
                        }
                    </div>
                    @if (Model.LoaiTaiKhoanNguoiDang == LoaiTaiKhoan.doanhnghiep && !string.IsNullOrEmpty(Model.MoTaCongTy))
                    {
                        <div class="card-footer bg-white p-3">
                             <h6 class="small text-muted mb-2 section-title-sm">Giới thiệu về công ty:</h6>
                            <div class="text-muted small company-description content-expandable formatted-content">@Html.Raw(Model.MoTaCongTy)</div>
                        </div>
                    }
                </div>

                <!-- Widget Chia sẻ -->
                 <div class="card border-0 shadow-sm mb-4 share-widget">
                    <div class="card-header bg-light p-3">
                        <h5 class="mb-0 section-title"><i class="fas fa-share-alt me-2 text-primary"></i>Chia sẻ tin này</h5>
                    </div>
                    <div class="card-body p-3">
                        <div class="d-flex justify-content-around">
                            <button type="button" class="btn btn-sm btn-outline-primary btn-icon-text" title="Chia sẻ lên Facebook" onclick="shareFacebook();"><i class="fab fa-facebook-f me-1"></i>Facebook</button>
                            <button type="button" class="btn btn-sm btn-outline-info btn-icon-text" title="Chia sẻ qua Email" onclick="shareEmail();"><i class="fas fa-envelope me-1"></i>Email</button>
                            <button type="button" class="btn btn-sm btn-outline-secondary btn-icon-text" title="Sao chép liên kết" onclick="copyLink();"><i class="fas fa-link me-1"></i>Copy Link</button>
                        </div>
                    </div>
                </div>
                                @{
                    // Tạo URL trực tiếp trong View
                    if (!string.IsNullOrWhiteSpace(Model.DiaChiLamViecDayDu))
                    {
                        string encodedAddress = WebUtility.UrlEncode(Model.DiaChiLamViecDayDu);
                        string googleMapsEmbedUrl = $"https://maps.google.com/maps?q={encodedAddress}&output=embed";

                        <div class="card border-0 shadow-sm mb-4 map-widget">
                            <div class="card-header bg-light p-3">
                                <h5 class="mb-0 section-title"><i class="fas fa-map-marked-alt me-2 text-primary"></i>Vị trí trên bản đồ</h5>
                            </div>
                            <div class="card-body p-0">
                                <div class="google-maps-iframe-container" style="position: relative; padding-bottom: 75%; height: 0; overflow: hidden;">
                                    <iframe
                                        style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;"
                                        loading="lazy"
                                        allowfullscreen
                                        referrerpolicy="no-referrer-when-downgrade"
                                        src="@googleMapsEmbedUrl">
                                    </iframe>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

<!-- MODAL BÁO CÁO (Nội dung HTML đã được cung cấp ở câu trả lời trước, giữ nguyên) -->
@if (userIsAuthenticated)
{
<div class="modal fade" id="reportJobModalDetail" tabindex="-1" aria-labelledby="reportJobModalDetailLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    @* ... (Nội dung modal như đã cung cấp) ... *@
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="reportJobFormDetail" asp-controller="TimViec" asp-action="GuiBaoCao" method="post">
                @Html.AntiForgeryToken() 
                <input type="hidden" name="TinTuyenDungId" value="@Model.Id" />
                
                <div class="modal-header">
                    <h5 class="modal-title" id="reportJobModalDetailLabel"><i class="fas fa-flag text-danger me-2"></i>Báo cáo tin: @Model.TieuDe</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="reportAlertPlaceholderDetail"></div> 
                    <div class="mb-3">
                        <label for="reportLyDoDetail" class="form-label">Lý do báo cáo <span class="text-danger">*</span></label>
                        <select class="form-select" id="reportLyDoDetail" name="LyDo" required>
                            <option value="">-- Chọn lý do --</option>
                            @foreach (var reasonValue in Enum.GetValues(typeof(LyDoBaoCao)))
                            {
                                <option value="@reasonValue.ToString()">@(((LyDoBaoCao)reasonValue).GetDisplayName())</option>
                            }
                        </select>
                        <div class="invalid-feedback">Vui lòng chọn lý do báo cáo.</div>
                    </div>
                    <div class="mb-3" id="reportChiTietGroupDetail">
    <label for="reportChiTietDetail" class="form-label">Mô tả chi tiết (tùy chọn)</label>
    <textarea class="form-control" id="reportChiTietDetail" name="ChiTiet" rows="3" placeholder="Cung cấp thêm thông tin để chúng tôi xử lý báo cáo nhanh hơn. (Bắt buộc nếu chọn lý do 'Khác')"></textarea>
    <div class="invalid-feedback" id="reportChiTietErrorDetail">Vui lòng nhập chi tiết cho lý do 'Khác'.</div>
</div>
                    <small class="text-muted">
                        Cảm ơn bạn đã giúp chúng tôi giữ cho cộng đồng an toàn và đáng tin cậy.
                    </small>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-danger" id="btnSubmitReportDetail"><i class="fas fa-paper-plane me-1"></i> Gửi báo cáo</button>
                </div>
            </form>
        </div>
    </div>
</div>
}


<button type="button" class="btn btn-primary btn-floating rounded-circle shadow-lg" id="backToTopBtnDetail" title="Lên đầu trang">
    <i class="fas fa-arrow-up"></i>
</button>


@section Scripts {
    <script>
    $(function () {
        const saveButtonDetail = $('#btnSaveToggleDetail');
        const csrfTokenFromView = '@requestToken'; 

        if (saveButtonDetail.length) {
             saveButtonDetail.on('click', function (e) {
                e.preventDefault();
                const button = $(this);
                const tinId = button.data('id');
                if (!tinId || isNaN(parseInt(tinId)) || parseInt(tinId) <= 0) {
                    alert("Lỗi: ID tin tuyển dụng không hợp lệ.");
                    return;
                }
                 if (!csrfTokenFromView) { 
                    alert("Lỗi: Token bảo mật bị thiếu. Vui lòng tải lại trang.");
                    return;
                }

                const isSaving = button.hasClass('btn-save-job');
                const url = isSaving ? '@Url.Action("LuuTin", "TimViec")' : '@Url.Action("BoLuuTin", "TimViec")';
                const icon = button.find('i');
                const textSpan = button.find('.button-text-js');
                const originalIconClass = icon.attr('class');
                const originalText = textSpan.text();

                button.prop('disabled', true);
                icon.removeClass().addClass('fas fa-spinner fa-spin me-1');
                textSpan.text('Đang xử lý...');

                $.ajax({
                    url: url,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(tinId),
                    headers: {
                        'RequestVerificationToken': csrfTokenFromView 
                    },
                    success: function (response) {
                        if (response && response.success) {
                            if (isSaving) {
                                button.removeClass('btn-save-job btn-outline-success').addClass('btn-unsave-job btn-success');
                                icon.removeClass().addClass('fas fa-heart fa-fw me-1');
                                textSpan.text('Đã lưu');
                                button.attr('title', 'Bỏ lưu tin này');
                            } else {
                                button.removeClass('btn-unsave-job btn-success').addClass('btn-save-job btn-outline-success');
                                icon.removeClass().addClass('far fa-heart fa-fw me-1');
                                textSpan.text('Lưu tin');
                                button.attr('title', 'Lưu tin này');
                            }
                        } else {
                            alert(response ? response.message : "Đã xảy ra lỗi trong quá trình xử lý.");
                            icon.removeClass().addClass(originalIconClass); textSpan.text(originalText);
                        }
                    },
                    error: function (jqXHR) {
                        let errorMsg = "Đã xảy ra lỗi kết nối hoặc lỗi máy chủ.";
                        if (jqXHR.status === 401) errorMsg = "Vui lòng đăng nhập để thực hiện hành động này.";
                        else if (jqXHR.status === 403) errorMsg = "Lỗi bảo mật hoặc bạn không có quyền thực hiện.";
                        else if (jqXHR.responseJSON && jqXHR.responseJSON.message) errorMsg = jqXHR.responseJSON.message;
                        else if (jqXHR.responseText) { try { const err = JSON.parse(jqXHR.responseText); if(err.title) errorMsg = err.title; } catch {} }
                        alert(errorMsg);
                        icon.removeClass().addClass(originalIconClass); textSpan.text(originalText);
                    },
                    complete: function () {
                        button.prop('disabled', false);
                    }
                });
            });
        }

        $('a[href="#ungtuyen-section"]').on('click', function(event) {
            if (this.pathname === window.location.pathname) {
              event.preventDefault();
              var hash = this.hash;
              $('html, body').animate({
                scrollTop: $(hash).offset().top - 70 
              }, 600);
            }
        });

        $('.content-expandable').each(function(){
            var contentDiv = $(this);
            var maxChar = 300; 
            var originalHtml = contentDiv.html();
            var textContent = $('<div>').html(originalHtml).text(); 

            if(textContent.length > maxChar){ 
                var shortText = textContent.substring(0, maxChar) + "... ";
                contentDiv.html(shortText); 
                contentDiv.append(' <a href="#" class="read-more small text-primary text-decoration-none fw-bold">Xem thêm <i class="fas fa-angle-down ms-1"></i></a>');
                
                contentDiv.on('click', '.read-more', function(e){
                    e.preventDefault();
                    var link = $(this);
                    if(link.text().includes("Xem thêm")){
                        contentDiv.html(originalHtml); 
                        contentDiv.append(' <a href="#" class="read-more small text-primary text-decoration-none fw-bold">Thu gọn <i class="fas fa-angle-up ms-1"></i></a>');
                    } else {
                        contentDiv.html(shortText); 
                        contentDiv.append(' <a href="#" class="read-more small text-primary text-decoration-none fw-bold">Xem thêm <i class="fas fa-angle-down ms-1"></i></a>');
                    }
                });
            }
        });

        window.shareFacebook = function() {
            const url = encodeURIComponent(window.location.href);
            const title = encodeURIComponent('@Model.TieuDe');
            window.open(`https://www.facebook.com/sharer/sharer.php?u=${url}"e=${title}`, '_blank'); // Thêm quote
        }
        window.shareEmail = function() {
            const subject = encodeURIComponent('Tin tuyển dụng thú vị: @Model.TieuDe');
            const body = encodeURIComponent(`Chào bạn,\n\nTôi muốn chia sẻ tin tuyển dụng này với bạn:\n${window.location.href}\n\nTrân trọng.`);
            window.location.href = `mailto:?subject=${subject}&body=${body}`;
        }
        window.copyLink = function() {
            navigator.clipboard.writeText(window.location.href).then(function() {
                alert('Đã sao chép liên kết vào bộ nhớ tạm!');
            }, function(err) {
                alert('Không thể sao chép liên kết. Vui lòng thử lại.');
            });
        }

        // === XỬ LÝ FORM BÁO CÁO TRÊN TRANG CHI TIẾT ===
        var reportModalInstanceDetail = null;
        if (document.getElementById('reportJobModalDetail')) {
            reportModalInstanceDetail = new bootstrap.Modal(document.getElementById('reportJobModalDetail'), {
                keyboard: false 
            });
        }
        const reportFormDetail = $('#reportJobFormDetail');
        const reportAlertPlaceholderDetail = $('#reportAlertPlaceholderDetail');

        function showAlertInModalDetail(message, type = 'danger') {
            reportAlertPlaceholderDetail.html(`<div class="alert alert-${type} alert-dismissible fade show" role="alert">${message}<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>`);
        }
        
        if (reportFormDetail.length) {
            reportFormDetail.on('submit', function(e) {
                e.preventDefault();
                reportAlertPlaceholderDetail.empty(); 
                const form = $(this);
                const submitButton = form.find('#btnSubmitReportDetail');
                const originalButtonHtml = submitButton.html();
                const lyDoSelect = form.find('#reportLyDoDetail');
                const chiTietTextarea = form.find('#reportChiTietDetail');
                let isValid = true;

                lyDoSelect.removeClass('is-invalid');
                chiTietTextarea.removeClass('is-invalid');
                form.find('#reportChiTietErrorDetail').hide();


                if (!lyDoSelect.val()) {
                    lyDoSelect.addClass('is-invalid');
                    isValid = false;
                }

                if (lyDoSelect.val() === 'khac' && !chiTietTextarea.val().trim()) {
                    chiTietTextarea.addClass('is-invalid');
                    form.find('#reportChiTietErrorDetail').show();
                    isValid = false;
                }
                
                if (!isValid) {
                    showAlertInModalDetail('Vui lòng kiểm tra lại các trường thông tin bắt buộc.', 'warning');
                    return;
                }

                submitButton.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang gửi...');
                
                const formCsrfToken = form.find('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(), 
                    headers: {
                        'RequestVerificationToken': formCsrfToken 
                    },
                    success: function(response) {
                        if (response && response.success) {
                            showAlertInModalDetail((response.message || "Báo cáo của bạn đã được gửi thành công!"), 'success');
                            form.trigger('reset'); 
                            $('#reportLyDoDetail').trigger('change'); 

                            const reportButtonOnPage = $('#btnOpenReportModalDetail');
                            reportButtonOnPage.prop('disabled', true)
                                .html('<i class="fas fa-check-circle fa-fw"></i><span class="d-none d-sm-inline ms-1">Đã báo cáo</span>')
                                .removeClass('btn-outline-danger').addClass('btn-secondary')
                                .removeAttr('data-bs-toggle'); // Xóa thuộc tính mở modal
                            
                            setTimeout(function() {
                                if(reportModalInstanceDetail) reportModalInstanceDetail.hide();
                                reportAlertPlaceholderDetail.empty();
                            }, response.alreadyReported ? 4000 : 2000); // Giữ modal lâu hơn nếu đã báo cáo từ trước

                        } else {
                            showAlertInModalDetail(response ? response.message : "Gửi báo cáo không thành công. Vui lòng thử lại.");
                        }
                    },
                    error: function(jqXHR) {
                        let errorMsg = "Đã xảy ra lỗi khi gửi báo cáo.";
                         if (jqXHR.responseJSON && jqXHR.responseJSON.message) errorMsg = jqXHR.responseJSON.message;
                        else if (jqXHR.status === 400 && jqXHR.responseJSON && jqXHR.responseJSON.errors) {
                             let validationErrors = [];
                             for (const key in jqXHR.responseJSON.errors) {
                                 if (jqXHR.responseJSON.errors.hasOwnProperty(key)) {
                                     jqXHR.responseJSON.errors[key].forEach(err => validationErrors.push(err));
                                 }
                             }
                             errorMsg = "Dữ liệu không hợp lệ: \n - " + validationErrors.join("\n - ");
                        }
                        showAlertInModalDetail(errorMsg);
                    },
                    complete: function() {
                        submitButton.prop('disabled', false).html(originalButtonHtml);
                    }
                });
            });

            $('#reportLyDoDetail').on('change', function() {
    const chiTietTextarea = $('#reportChiTietDetail');
    // Kiểm tra nếu lý do là 'Khac' (giá trị từ Enum) thì đặt là bắt buộc
    if ($(this).val() === 'Khac') { // Chú ý: 'Khac' viết hoa chữ K đầu tiên giống tên Enum
        chiTietTextarea.prop('required', true);
    } else {
        chiTietTextarea.prop('required', false);
        // Nếu người dùng đổi lý do, xóa trạng thái lỗi (nếu có)
        chiTietTextarea.removeClass('is-invalid');
        chiTietTextarea.next('.invalid-feedback').hide();
    }
});

            if (reportModalInstanceDetail) {
                document.getElementById('reportJobModalDetail').addEventListener('hidden.bs.modal', function () {
                    // Chỉ reset nếu nút báo cáo trên trang chưa bị disable (tức là chưa submit thành công)
                    if (!$('#btnOpenReportModalDetail').is(':disabled')) { 
                        reportFormDetail.trigger('reset');
                        $('#reportLyDoDetail').trigger('change'); 
                        reportAlertPlaceholderDetail.empty();
                        $('#reportLyDoDetail').removeClass('is-invalid');
                        $('#reportChiTietDetail').removeClass('is-invalid');
                        $('#reportChiTietDetail').next('.invalid-feedback').hide();
                    }
                });
            }
        }
    });
    </script>
}